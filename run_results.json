{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v4.json", "dbt_version": "1.0.4", "generated_at": "2022-04-10T05:07:53.000129Z", "invocation_id": "51ce62cb-d3a1-4f8e-833f-ab1056e79994", "env": {}}, "results": [{"status": "error", "timing": [], "thread_id": "Thread-1", "execution_time": 25.16733717918396, "adapter_response": {}, "message": "Database Error in model stg_owox_hits (models/staging/stg_owox_hits.sql)\n  Code: 241.\n  DB::Exception: Memory limit (for query) exceeded: would use 9.39 GiB (attempt to allocate chunk of 134217728 bytes), maximum: 9.31 GiB. Stack trace:\n  \n  0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xa82d23a in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  1. DB::Exception::Exception<char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*&&, char const*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) @ 0xa8420a9 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  2. MemoryTracker::allocImpl(long, bool) @ 0xa841a23 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  3. MemoryTracker::allocImpl(long, bool) @ 0xa8417f0 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  4. bool DB::(anonymous namespace)::FunctionEmptyArrayToSingleImpl::executeString<true>(DB::IColumn const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, DB::IColumn&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul>&, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul> const*, DB::PODArray<char8_t, 4096ul, Allocator<false, false>, 15ul, 16ul>*) @ 0x12077945 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  5. DB::FunctionEmptyArrayToSingle::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0x1207377c in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  6. DB::FunctionToExecutableFunctionAdaptor::executeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long) const @ 0xcd28d4e in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  7. DB::IExecutableFunction::executeWithoutLowCardinalityColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x12e2aa1e in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  8. DB::IExecutableFunction::executeWithoutSparseColumns(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x12e2b14d in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  9. DB::IExecutableFunction::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0x12e2c14f in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  10. DB::IFunctionBase::execute(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&, std::__1::shared_ptr<DB::IDataType const> const&, unsigned long, bool) const @ 0xcd287ad in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  11. DB::ArrayJoinAction::execute(DB::Block&) @ 0x135a7425 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  12. DB::ArrayJoinTransform::transform(DB::Chunk&) @ 0x14ac3825 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  13. DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x11544bb0 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  14. DB::ISimpleTransform::work() @ 0x1483f347 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  15. DB::ExecutionThreadContext::executeTask() @ 0x14861c63 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  16. DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x148564de in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  17. DB::PipelineExecutor::executeImpl(unsigned long) @ 0x14855329 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  18. DB::PipelineExecutor::execute(unsigned long) @ 0x14855038 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  19. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<DB::CompletedPipelineExecutor::execute()::$_0>(DB::CompletedPipelineExecutor::execute()::$_0&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0x148543e8 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  20. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa86f677 in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  21. void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()> >(void*) @ 0xa87307d in /usr/lib/debug/.build-id/42/9c53d15dd14f98.debug\n  22. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\n  23. __clone @ 0x12161f in /lib/x86_64-linux-gnu/libc-2.27.so\n  compiled SQL at target/run/snto_clickhouse/models/staging/stg_owox_hits.sql", "failures": null, "unique_id": "model.snto_clickhouse.stg_owox_hits"}], "elapsed_time": 26.30311608314514, "args": {"write_json": true, "use_colors": true, "printer_width": 80, "version_check": true, "partial_parse": true, "static_parser": true, "profiles_dir": "/home/ant/Workfiles/snto/snto_dbt", "send_anonymous_usage_stats": true, "event_buffer_size": 100000, "target": "dev", "select": ["stg_owox_hits"], "which": "run", "rpc_method": "run", "indirect_selection": "eager"}}