{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v4.json", "dbt_version": "1.0.4", "generated_at": "2022-04-28T10:04:06.116362Z", "invocation_id": "df1e937f-b04d-4326-8af7-9e7e7a31545b", "env": {}, "project_id": "73f24dd9bb156079b226abb2a7aaaaa6", "user_id": "511a3d1e-f3d3-48e7-baaf-8ba0401380e7", "send_anonymous_usage_stats": true, "adapter_type": "clickhouse"}, "nodes": {"model.snto_clickhouse.presets_1c_order_details": {"raw_sql": "{{\n    config(\n        materialized='table',\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\nSelect *\nFROM {{ ref('stg_1c_order_details') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.snto_clickhouse.stg_1c_order_details"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_1c_order_details"], "unique_id": "model.snto_clickhouse.presets_1c_order_details", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_1c_order_details.sql", "original_file_path": "models/presets/presets_1c_order_details.sql", "name": "presets_1c_order_details", "alias": "presets_1c_order_details", "checksum": {"name": "sha256", "checksum": "5c4575d3846f905d0ab4c1b302610b2e2c6039dae4641e984d50d78d1c822ab9"}, "tags": ["hits"], "refs": [["stg_1c_order_details"]], "sources": [], "description": "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e \u0437\u0430\u043a\u0430\u0437\u0430\u043c \u0438\u0437 1\u0421", "columns": {"Order_Date_Create": {"name": "Order_Date_Create", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Distr": {"name": "Order_Date_Distr", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Last_Status_Date": {"name": "Order_Last_Status_Date", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_ID": {"name": "Order_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Initial_ID": {"name": "Order_Initial_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Region": {"name": "Region", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "City": {"name": "City", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Address": {"name": "Address", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_ID": {"name": "SKU_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU": {"name": "SKU", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Group": {"name": "SKU_Group", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Type": {"name": "SKU_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Customized": {"name": "SKU_Customized", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_PS": {"name": "SKU_PS", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_ID": {"name": "Client_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client": {"name": "Client", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Type": {"name": "Client_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Number": {"name": "Client_Number", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Number_Additional": {"name": "Client_Number_Additional", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Email": {"name": "Client_Email", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Service_Logistik_Free": {"name": "Service_Logistik_Free", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Service_Rise": {"name": "Service_Rise", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Corp": {"name": "Order_Corp", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Opt": {"name": "Order_Opt", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Center": {"name": "Logistics_Center", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Option": {"name": "Logistics_Option", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Prepayment_Required": {"name": "Prepayment_Required", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Payment_Type": {"name": "Payment_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Activity_Status": {"name": "Activity_Status", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Source": {"name": "Order_Source", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Dnis": {"name": "Dnis", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Manager": {"name": "Manager", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Responsible": {"name": "Responsible", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Middleman": {"name": "Middleman", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Operation_Type": {"name": "Operation_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Approval_Status": {"name": "Approval_Status", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Reason_Cancel": {"name": "Order_Reason_Cancel", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Discount_Reason": {"name": "Order_Discount_Reason", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Sum_without_Discount": {"name": "SKU_Sales_Sum_without_Discount", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Sum_with_Discount": {"name": "SKU_Sales_Sum_with_Discount", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Count": {"name": "SKU_Sales_Count", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Logistik_Sum": {"name": "Order_Logistik_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Rise_Sum": {"name": "Order_Rise_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Upload_Date": {"name": "Upload_Date", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Cost_Sum": {"name": "SKU_Cost_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Logistics": {"name": "Order_Date_Logistics", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Unit": {"name": "SKU_Unit", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Responsible_Cancel": {"name": "Order_Responsible_Cancel", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Gross_Profit": {"name": "SKU_Gross_Profit", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Brand": {"name": "SKU_Brand", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Promotion_Type": {"name": "SKU_Promotion_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Promo": {"name": "Order_Promo", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Loyalty_Card": {"name": "Order_Loyalty_Card", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Action": {"name": "Order_Action", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Artikul": {"name": "SKU_Artikul", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Nabor": {"name": "Nabor", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Nabor_Artikul": {"name": "Nabor_Artikul", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Document_GUID": {"name": "Document_GUID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PustayaKorzina": {"name": "PustayaKorzina", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "BroshennayaKorzina": {"name": "BroshennayaKorzina", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "TehnologicheskayaOtmena": {"name": "TehnologicheskayaOtmena", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_KontaktnoeLitso": {"name": "Client_KontaktnoeLitso", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_KontaktnoeLitso_ID": {"name": "Client_KontaktnoeLitso_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SessionID": {"name": "SessionID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "User_Session_ID": {"name": "User_Session_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_GUID": {"name": "SKU_GUID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Center_Source": {"name": "Logistics_Center_Source", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Comment": {"name": "Client_Comment", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Logistics_Calc": {"name": "Order_Date_Logistics_Calc", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "MarketingovayaAktivnost": {"name": "MarketingovayaAktivnost", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Company_Name": {"name": "Company_Name", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Source_Type": {"name": "Order_Source_Type", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_1c_order_details.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.8705714, "compiled_sql": "\nSelect *\nFROM analytics_prod.stg_1c_order_details", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_1c_order_details"}, "model.snto_clickhouse.presets_owox_ecomm_purchase": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\n\nSelect *\nFROM {{ ref('stg_owox_ecomm_purchase') }} \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  {{ ref('pre_filters') }})\n{% if is_incremental() %}\n  AND date not in (select distinct date from {{ this }})\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_purchase", "model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_owox_ecomm_purchase"], "unique_id": "model.snto_clickhouse.presets_owox_ecomm_purchase", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_owox_ecomm_purchase.sql", "original_file_path": "models/presets/presets_owox_ecomm_purchase.sql", "name": "presets_owox_ecomm_purchase", "alias": "presets_owox_ecomm_purchase", "checksum": {"name": "sha256", "checksum": "c6aac2f02279cc1b602704a08c61d76d0374336c8ddd7f53cdd51a6e40ad4724"}, "tags": ["hits"], "refs": [["stg_owox_ecomm_purchase"], ["pre_filters"]], "sources": [], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0441\u043e\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u044b\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0451\u043b \u043a\u043b\u0438\u043a", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productQuantity": {"name": "productQuantity", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0442\u043e\u0432\u0430\u0440\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0445", "meta": {}, "data_type": null, "quote": null, "tags": []}, "transactionId": {"name": "transactionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_owox_ecomm_purchase.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.849011, "compiled_sql": "\n\nSelect *\nFROM analytics_prod.stg_owox_ecomm_purchase \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  analytics_prod.pre_filters)\n\n  AND date not in (select distinct date from analytics_prod.presets_owox_ecomm_purchase)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_owox_ecomm_purchase"}, "model.snto_clickhouse.presets_owox_ecomm_adds": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\n\nSelect *\nFROM {{ ref('stg_owox_ecomm_adds') }} \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  {{ ref('pre_filters') }})\n{% if is_incremental() %}\n  AND date not in (select distinct date from {{ this }})\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_adds", "model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_owox_ecomm_adds"], "unique_id": "model.snto_clickhouse.presets_owox_ecomm_adds", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_owox_ecomm_adds.sql", "original_file_path": "models/presets/presets_owox_ecomm_adds.sql", "name": "presets_owox_ecomm_adds", "alias": "presets_owox_ecomm_adds", "checksum": {"name": "sha256", "checksum": "9e158b7498832d2e2211db7c9eb30b7e10c5aac2acd4e33d34f41731ac274866"}, "tags": ["hits"], "refs": [["stg_owox_ecomm_adds"], ["pre_filters"]], "sources": [], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f\u043c \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0432 ecommerce", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0451\u043b \u043a\u043b\u0438\u043a", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productQuantity": {"name": "productQuantity", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0442\u043e\u0432\u0430\u0440\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0445", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_owox_ecomm_adds.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.845453, "compiled_sql": "\n\nSelect *\nFROM analytics_prod.stg_owox_ecomm_adds \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  analytics_prod.pre_filters)\n\n  AND date not in (select distinct date from analytics_prod.presets_owox_ecomm_adds)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_owox_ecomm_adds"}, "model.snto_clickhouse.presets_owox_ecomm_clicks": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\n\nSelect *\nFROM {{ ref('stg_owox_ecomm_clicks') }} \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  {{ ref('pre_filters') }})\n{% if is_incremental() %}\n  AND date not in (select distinct date from {{ this }})\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_clicks", "model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_owox_ecomm_clicks"], "unique_id": "model.snto_clickhouse.presets_owox_ecomm_clicks", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_owox_ecomm_clicks.sql", "original_file_path": "models/presets/presets_owox_ecomm_clicks.sql", "name": "presets_owox_ecomm_clicks", "alias": "presets_owox_ecomm_clicks", "checksum": {"name": "sha256", "checksum": "2fde819c7796d38b4afbe62aefa28de7304f53b3cf0510c38eb4adb4d92288bb"}, "tags": ["hits"], "refs": [["stg_owox_ecomm_clicks"], ["pre_filters"]], "sources": [], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043a\u043b\u0438\u043a\u0430\u043c ecommerce", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0451\u043b \u043a\u043b\u0438\u043a", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u043a\u043b\u0438\u043a\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "position": {"name": "position", "description": "\u041f\u043e\u0437\u0438\u0446\u0438\u044f \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_owox_ecomm_clicks.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.8424666, "compiled_sql": "\n\nSelect *\nFROM analytics_prod.stg_owox_ecomm_clicks \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  analytics_prod.pre_filters)\n\n  AND date not in (select distinct date from analytics_prod.presets_owox_ecomm_clicks)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_owox_ecomm_clicks"}, "model.snto_clickhouse.presets_owox_sessions": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\nWITH\ncte as (\n    SELECT *\n    FROM {{ ref('pre_owox_sessions') }}\n),\nlandPage as (\n  SELECT\n    sessionId,\n    pagePath as landingPage\n  FROM {{ ref(\"pre_owox_hits\") }}\n  WHERE for_landingPage = 1\n),\njn as (\n    Select *\n    FROM cte\n    LEFT JOIN landPage using(sessionId)\n)\nSELECT *\nFROM jn\n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  {{ ref('pre_filters') }})\n{% if is_incremental() %}\n  AND date not in (select distinct date from {{ this }})\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.pre_owox_sessions", "model.snto_clickhouse.pre_owox_hits", "model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_owox_sessions"], "unique_id": "model.snto_clickhouse.presets_owox_sessions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_owox_sessions.sql", "original_file_path": "models/presets/presets_owox_sessions.sql", "name": "presets_owox_sessions", "alias": "presets_owox_sessions", "checksum": {"name": "sha256", "checksum": "227bae4b2ecfb986b7eef957d59bcf4ded63821d906517c0d42af5a24a126324"}, "tags": ["hits"], "refs": [["pre_owox_sessions"], ["pre_owox_hits"], ["pre_filters"]], "sources": [], "description": "# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\n\u041c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0445\u0438\u0442\u0430\u043c, \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c\u044b\u043c \u0441 \u0441\u0430\u0439\u0442\u0430.\n\u0422\u0438\u043f\u044b \u0445\u0438\u0442\u043e\u0432:\n- pageview. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446\n- events. \u0421\u043e\u0431\u044b\u0442\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0432 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \n\n\u041c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u043e\u0432 \u0432 \u0441\u043b\u043e\u0435 bi \u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439 \u0438 ad-hoc \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\n\n**\u0414\u0430\u0442\u0430 min:** 2021-01-01  \n**\u0414\u0430\u0442\u0430 max:** 2022-04-25  \n\n**\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:** \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u043e \u0432 14:30\n\n***\n## \u0417\u0430\u0434\u0430\u0447\u0438\n1. [\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 presets_hits \u0432 CH](https://snto.kaiten.ru/4403667)\n\n\n*** \n### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u043e\u0442\u0447\u0435\u0442\u0430\u0445\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\n\n***", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "visitNumber": {"name": "visitNumber", "description": "\u041f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0432\u0438\u0437\u0438\u0442\u0430 \u0437\u0430 \u0432\u0441\u044e \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0442\u0440\u0430\u0444\u0438\u043a\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "medium": {"name": "medium", "description": "\u041a\u0430\u043d\u0430\u043b \u0442\u0440\u0430\u0444\u0438\u043a\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaign": {"name": "campaign", "description": "\u0420\u0435\u043a\u043b\u0430\u043c\u043d\u0430\u044f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adContent": {"name": "adContent", "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "keyword": {"name": "keyword", "description": "\u041a\u043b\u044e\u0447\u0435\u0432\u0430\u044f \u0444\u0440\u0430\u0437\u0430 \u0438\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deviceCategory": {"name": "deviceCategory", "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browserVersion": {"name": "browserVersion", "description": "\u0412\u0435\u0440\u0441\u0438\u044f \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "operatingSystem": {"name": "operatingSystem", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "operatingSystemVersion": {"name": "operatingSystemVersion", "description": "\u0412\u0435\u0440\u0441\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mobileDeviceInfo": {"name": "mobileDeviceInfo", "description": "\u041c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u043c\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0443", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip": {"name": "ip", "description": "\u0410\u0439\u043f\u0438-\u0430\u0434\u0440\u0435\u0441 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "userAgent": {"name": "userAgent", "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u044e\u0437\u0435\u0440-\u0430\u0433\u0435\u043d\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "language": {"name": "language", "description": "\u042f\u0437\u044b\u043a \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "country": {"name": "country", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "region": {"name": "region", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u043e\u043d\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "city": {"name": "city", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u043e\u0440\u043e\u0434\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "latitude": {"name": "latitude", "description": "\u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0448\u0438\u0440\u043e\u0442\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "longitude": {"name": "longitude", "description": "\u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0434\u043e\u043b\u0433\u043e\u0442\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "landingPage": {"name": "landingPage", "description": "\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0432\u0445\u043e\u0434\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_owox_sessions.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.8375888, "compiled_sql": "\nWITH\ncte as (\n    SELECT *\n    FROM analytics_prod.pre_owox_sessions\n),\nlandPage as (\n  SELECT\n    sessionId,\n    pagePath as landingPage\n  FROM analytics_prod.pre_owox_hits\n  WHERE for_landingPage = 1\n),\njn as (\n    Select *\n    FROM cte\n    LEFT JOIN landPage using(sessionId)\n)\nSELECT *\nFROM jn\n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  analytics_prod.pre_filters)\n\n  AND date not in (select distinct date from analytics_prod.presets_owox_sessions)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_owox_sessions"}, "model.snto_clickhouse.presets_owox_ecomm_impressions": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\n\nSelect *\nFROM {{ ref('stg_owox_ecomm_impressions') }} \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  {{ ref('pre_filters') }})\n{% if is_incremental() %}\n  AND date not in (select distinct date from {{ this }})\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_impressions", "model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_owox_ecomm_impressions"], "unique_id": "model.snto_clickhouse.presets_owox_ecomm_impressions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_owox_ecomm_impressions.sql", "original_file_path": "models/presets/presets_owox_ecomm_impressions.sql", "name": "presets_owox_ecomm_impressions", "alias": "presets_owox_ecomm_impressions", "checksum": {"name": "sha256", "checksum": "49bb3d4fbcd01043963f453240f6e929a530e5fc382d6f0e40c236ea2f7ff5b0"}, "tags": ["hits"], "refs": [["stg_owox_ecomm_impressions"], ["pre_filters"]], "sources": [], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u043c \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u0442\u043e\u0432\u0430\u0440\u0430 ecommerce", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0451\u043b \u043a\u043b\u0438\u043a", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "position": {"name": "position", "description": "\u041f\u043e\u0437\u0438\u0446\u0438\u044f \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_owox_ecomm_impressions.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.8400667, "compiled_sql": "\n\nSelect *\nFROM analytics_prod.stg_owox_ecomm_impressions \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  analytics_prod.pre_filters)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_owox_ecomm_impressions"}, "model.snto_clickhouse.presets_owox_promotions": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\n\nSelect *\nFROM {{ ref('stg_owox_promotions') }} \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  {{ ref('pre_filters') }})\n{% if is_incremental() %}\n  AND date not in (select distinct date from {{ this }})\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.stg_owox_promotions", "model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_owox_promotions"], "unique_id": "model.snto_clickhouse.presets_owox_promotions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_owox_promotions.sql", "original_file_path": "models/presets/presets_owox_promotions.sql", "name": "presets_owox_promotions", "alias": "presets_owox_promotions", "checksum": {"name": "sha256", "checksum": "811135a380c715cea0fe9f9393aa30dc888cb8d0c96d36bcb69a5b72cbfa6a12"}, "tags": ["hits"], "refs": [["stg_owox_promotions"], ["pre_filters"]], "sources": [], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0440\u0435\u043a\u043b\u0430\u043c\u0435", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promoCreative": {"name": "promoCreative", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0439 \u0430\u043a\u0446\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promoId": {"name": "promoId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u0440\u0435\u0430\u0442\u0438\u0432\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promoPosition": {"name": "promoPosition", "description": "\u041f\u043e\u0437\u0438\u0446\u0438\u044f \u043a\u0440\u0435\u0430\u0442\u0438\u0432\u0430 \u0432 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u043c \u0431\u043b\u043e\u043a\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promotionActionInfo": {"name": "promotionActionInfo", "description": "B\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0440\u043e\u043c\u043e\u043a\u0440\u0435\u0430\u0442\u0438\u0432\u043e\u043c(view, click)", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_owox_promotions.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.8521109, "compiled_sql": "\n\nSelect *\nFROM analytics_prod.stg_owox_promotions \n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  analytics_prod.pre_filters)\n\n  AND date not in (select distinct date from analytics_prod.presets_owox_promotions)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_owox_promotions"}, "model.snto_clickhouse.presets_owox_hits": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['hits'],\n        engine='MergeTree()'\n    )\n}}\nWITH\ncte as (\n-- \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0445\u0438\u0442\u043e\u0432\n\tSELECT\n\t\t*,\n\t\trow_number() over(partition by sessionId Order By hitTimestamp) as hits_sequence\n\tFROM {{ ref('pre_owox_hits') }} \n),\n-- \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\npageview_seq as (\n\tSELECT\n\t\tsessionId,\n\t\thitId,\n\t\trow_number() over(partition by sessionId Order By hitTimestamp) as pageview_sequence\n\tFROM {{ ref('pre_owox_hits') }}\n\tWHERE hitType = 'pageview'\n),\nis_last_page as (\n-- \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\tSELECT sessionId,  max(pageview_sequence) as max_page, min(pageview_sequence) as min_page\n\tFROM pageview_seq\n\tGROUP BY sessionId\n),\n-- \u0434\u0436\u043e\u043d\u0438\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043a \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\nwith_pageview_seq as (\n\tSELECT *\n\tFROM cte\n\tLEFT JOIN pageview_seq using(sessionId, hitId)\n),\n-- \u0434\u0436\u043e\u043d\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0438 \u043f\u0441\u043e\u043b\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043a \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0438 \u043f\u0440\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f 0 \u0438\u043b\u0438 1\nfinal as (\n\tSelect *,\n\t\tCASE\n\t\t\tWHEN pageview_sequence = max_page THEN 1\n\t\t\tELSE 0\n\t\tEND as isLastPage,\n\t\tCASE\n\t\t\tWHEN pageview_sequence = min_page THEN 1\n\t\t\tELSE 0\n\t\tEND as isFirstPage\n\tFROM with_pageview_seq\n\tLEFT JOIN is_last_page using(sessionId)\n)\nSELECT\n\tdate,\n\tclientId,\n\tsessionId,\n\thitId,\n\thitTimestamp,\n\thitType,\n\tisInteraction,\n\treferer,\n\treferralPath,\n\teventCategory,\n\teventAction,\n\teventLabel,\n\teventValue,\n\thostname,\n\tpageUrl,\n\tpagePath,\n\tpageTitle,\n\thits_sequence,\n\tpageview_sequence,\n\tisLastPage,\n\tisFirstPage\nFROM final\n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  {{ ref('pre_filters') }})\n{% if is_incremental() %}\n  AND date not in (select distinct date from {{ this }})\n{% endif %}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.pre_owox_hits", "model.snto_clickhouse.pre_owox_hits", "model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "presets", "presets_owox_hits"], "unique_id": "model.snto_clickhouse.presets_owox_hits", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets/presets_owox_hits.sql", "original_file_path": "models/presets/presets_owox_hits.sql", "name": "presets_owox_hits", "alias": "presets_owox_hits", "checksum": {"name": "sha256", "checksum": "0bdca2101c3ec842b473c5298fd163cd145ddf8ff0fe434482dc877b92d9b0c4"}, "tags": ["hits"], "refs": [["pre_owox_hits"], ["pre_owox_hits"], ["pre_filters"]], "sources": [], "description": "# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\n\u041c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0445\u0438\u0442\u0430\u043c, \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c\u044b\u043c \u0441 \u0441\u0430\u0439\u0442\u0430.\n\u0422\u0438\u043f\u044b \u0445\u0438\u0442\u043e\u0432:\n- pageview. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446\n- events. \u0421\u043e\u0431\u044b\u0442\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0432 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \n\n\u041c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u043e\u0432 \u0432 \u0441\u043b\u043e\u0435 bi \u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439 \u0438 ad-hoc \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\n\n**\u0414\u0430\u0442\u0430 min:** 2021-01-01  \n**\u0414\u0430\u0442\u0430 max:** 2022-04-25  \n\n**\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:** \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u043e \u0432 14:30\n\n***\n## \u0417\u0430\u0434\u0430\u0447\u0438\n1. [\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 presets_hits \u0432 CH](https://snto.kaiten.ru/4403667)\n\n\n*** \n### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u043e\u0442\u0447\u0435\u0442\u0430\u0445\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\n\n***", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitTimestamp": {"name": "hitTimestamp", "description": "Timestamp \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitType": {"name": "hitType", "description": "\u0422\u0438\u043f \u0445\u0438\u0442\u0430. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f('pageview', 'event')", "meta": {}, "data_type": null, "quote": null, "tags": []}, "isInteraction": {"name": "isInteraction", "description": "\u0411\u044b\u043b \u043b\u0438 \u0445\u0438\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043c", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referer": {"name": "referer", "description": "\u0420\u0435\u0444\u0435\u0440\u0435\u0440", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referralPath": {"name": "referralPath", "description": "\u041f\u0443\u0442\u044c \u0440\u0435\u0444\u0435\u0440\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventCategory": {"name": "eventCategory", "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventAction": {"name": "eventAction", "description": "\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043f\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044e. \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventLabel": {"name": "eventLabel", "description": "\u042f\u0440\u043b\u044b\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventValue": {"name": "eventValue", "description": "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageUrl": {"name": "pageUrl", "description": "\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 GET-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pagePath": {"name": "pagePath", "description": "\u0410\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0431\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageTitle": {"name": "pageTitle", "description": "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hits_sequence": {"name": "hits_sequence", "description": "\u041f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageview_sequence": {"name": "pageview_sequence", "description": "\u041f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0445\u0438\u0442\u0430 \u0441 \u0442\u0438\u043f\u043e\u043c 'pageview'", "meta": {}, "data_type": null, "quote": null, "tags": []}, "isLastPage": {"name": "isLastPage", "description": "\u0411\u044b\u043b\u0430 \u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0432 \u0441\u0435\u0441\u0441\u0438\u0438. 1 - \u0431\u044b\u043b\u0430, 0 - \u043d\u0435 \u0431\u044b\u043b\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "isFirstPage": {"name": "isFirstPage", "description": "\u0411\u044b\u043b\u0430 \u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432 \u0441\u0435\u0441\u0441\u0438\u0438. 1 - \u0431\u044b\u043b\u0430, 0 - \u043d\u0435 \u0431\u044b\u043b\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "snto_clickhouse://models/presets/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/presets/presets_owox_hits.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.8295236, "compiled_sql": "\nWITH\ncte as (\n-- \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0445\u0438\u0442\u043e\u0432\n\tSELECT\n\t\t*,\n\t\trow_number() over(partition by sessionId Order By hitTimestamp) as hits_sequence\n\tFROM analytics_prod.pre_owox_hits \n),\n-- \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\npageview_seq as (\n\tSELECT\n\t\tsessionId,\n\t\thitId,\n\t\trow_number() over(partition by sessionId Order By hitTimestamp) as pageview_sequence\n\tFROM analytics_prod.pre_owox_hits\n\tWHERE hitType = 'pageview'\n),\nis_last_page as (\n-- \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n\tSELECT sessionId,  max(pageview_sequence) as max_page, min(pageview_sequence) as min_page\n\tFROM pageview_seq\n\tGROUP BY sessionId\n),\n-- \u0434\u0436\u043e\u043d\u0438\u043c \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u043a \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\nwith_pageview_seq as (\n\tSELECT *\n\tFROM cte\n\tLEFT JOIN pageview_seq using(sessionId, hitId)\n),\n-- \u0434\u0436\u043e\u043d\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0438 \u043f\u0441\u043e\u043b\u0435\u0434\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043a \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0438 \u043f\u0440\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f 0 \u0438\u043b\u0438 1\nfinal as (\n\tSelect *,\n\t\tCASE\n\t\t\tWHEN pageview_sequence = max_page THEN 1\n\t\t\tELSE 0\n\t\tEND as isLastPage,\n\t\tCASE\n\t\t\tWHEN pageview_sequence = min_page THEN 1\n\t\t\tELSE 0\n\t\tEND as isFirstPage\n\tFROM with_pageview_seq\n\tLEFT JOIN is_last_page using(sessionId)\n)\nSELECT\n\tdate,\n\tclientId,\n\tsessionId,\n\thitId,\n\thitTimestamp,\n\thitType,\n\tisInteraction,\n\treferer,\n\treferralPath,\n\teventCategory,\n\teventAction,\n\teventLabel,\n\teventValue,\n\thostname,\n\tpageUrl,\n\tpagePath,\n\tpageTitle,\n\thits_sequence,\n\tpageview_sequence,\n\tisLastPage,\n\tisFirstPage\nFROM final\n-- \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432, \u0440\u043e\u0431\u043e\u0442\u043e\u0432 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\nWHERE sessionId not in (select sessionId from  analytics_prod.pre_filters)\n\n  AND date not in (select distinct date from analytics_prod.presets_owox_hits)\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.presets_owox_hits"}, "model.snto_clickhouse.stg_bots": {"raw_sql": "{{\n    config(\n        tags=['filters'],\n        engine='MergeTree()'\n    )\n}}\n\nSELECT\n  date,\n  sessionId,\n  'bots' as type\nFROM\n  {{ source('dwh_site' ,'src_owox_sessions') }}\nLEFT ARRAY JOIN\n    device\nwhere date = {{ var('execution_date') }}\nAND\n device.isBot = 1\nGROUP BY\n  date,\n  sessionId,\n  type", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["filters"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_bots"], "unique_id": "model.snto_clickhouse.stg_bots", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_bots.sql", "original_file_path": "models/staging/stg_bots.sql", "name": "stg_bots", "alias": "stg_bots", "checksum": {"name": "sha256", "checksum": "b0b1e1a87cdcd8c699eac2608bfdfffa2d506f746e65a144e9953f116da9eb10"}, "tags": ["filters"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0421\u0435\u0441\u0441\u0438\u0438 \u0431\u043e\u0442\u043e\u0432", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "\u0422\u0438\u043f \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0411\u043e\u0442\u044b == 'bots'", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_bots.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["filters"], "engine": "MergeTree()"}, "created_at": 1651140246.9621792, "compiled_sql": "\n\nSELECT\n  date,\n  sessionId,\n  'bots' as type\nFROM\n  dwh_site.owoxbi_sessions\nLEFT ARRAY JOIN\n    device\nwhere date = toDate(NOW()) - 10\nAND\n device.isBot = 1\nGROUP BY\n  date,\n  sessionId,\n  type", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_bots"}, "model.snto_clickhouse.stg_cost_data": {"raw_sql": "{{\n    config(\n      engine='MergeTree()'\n    )\n}}\n\nSELECT\n  source,\n  medium,\n  campaign,\n  keyword,\n  adContent,\n  adGroup,\n  date,\n  adCost,\n  impressions,\n  adClicks,\n  adAccount,\n  dataSource,\n  campaignType,\n  campaignId,\n  campaignName,\n  adGroupId,\n  adGroupName,\n  adSource\nFROM {{ source('dwh_site' ,'src_cost_data') }}\nwhere date >= toDate(NOW()) - 2\nGROUP BY\n  source,\n  medium,\n  campaign,\n  keyword,\n  adContent,\n  adGroup,\n  date,\n  adCost,\n  impressions,\n  adClicks,\n  adAccount,\n  dataSource,\n  campaignType,\n  campaignId,\n  campaignName,\n  adGroupId,\n  adGroupName,\n  adSource", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_cost_data"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_cost_data"], "unique_id": "model.snto_clickhouse.stg_cost_data", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_cost_data.sql", "original_file_path": "models/staging/stg_cost_data.sql", "name": "stg_cost_data", "alias": "stg_cost_data", "checksum": {"name": "sha256", "checksum": "a2949905b4d29437bcb4094163f5552d77699ba89261683e0ff803db3a93ca79"}, "tags": [], "refs": [], "sources": [["dwh_site", "src_cost_data"]], "description": "Text", "columns": {"source": {"name": "source", "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_source", "meta": {}, "data_type": null, "quote": null, "tags": []}, "medium": {"name": "medium", "description": "\u041a\u0430\u043d\u0430\u043b \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_medium", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaign": {"name": "campaign", "description": "\u0420\u0435\u043a\u043b\u0430\u043c\u043d\u0430\u044f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u044f. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_campaign", "meta": {}, "data_type": null, "quote": null, "tags": []}, "keyword": {"name": "keyword", "description": "\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_keyword", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adContent": {"name": "adContent", "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_content", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adGroup": {"name": "adGroup", "description": "\u0413\u0440\u0443\u043f\u043f\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0432\u0438\u0437\u0438\u0442\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adCost": {"name": "adCost", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u0437\u0430 \u0434\u0435\u043d\u044c.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043a\u0430\u0437\u043e\u0432 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u044b\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adClicks": {"name": "adClicks", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043b\u0438\u043a\u043e\u0432 \u043f\u043e \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044e.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adAccount": {"name": "adAccount", "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u043c \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "dataSource": {"name": "dataSource", "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 CostData_", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaignType": {"name": "campaignType", "description": "\u0422\u0438\u043f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445. \u0421\u043c. \u0434\u043e\u043a\u0443", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaignId": {"name": "campaignId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0439 \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaignName": {"name": "campaignName", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0439 \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adGroupId": {"name": "adGroupId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adGroupName": {"name": "adGroupName", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adSource": {"name": "adSource", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0438\u0441\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_cost_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "engine": "MergeTree()"}, "created_at": 1651140246.9227424, "compiled_sql": "\n\nSELECT\n  source,\n  medium,\n  campaign,\n  keyword,\n  adContent,\n  adGroup,\n  date,\n  adCost,\n  impressions,\n  adClicks,\n  adAccount,\n  dataSource,\n  campaignType,\n  campaignId,\n  campaignName,\n  adGroupId,\n  adGroupName,\n  adSource\nFROM dwh_site.CostData\nwhere date >= toDate(NOW()) - 2\nGROUP BY\n  source,\n  medium,\n  campaign,\n  keyword,\n  adContent,\n  adGroup,\n  date,\n  adCost,\n  impressions,\n  adClicks,\n  adAccount,\n  dataSource,\n  campaignType,\n  campaignId,\n  campaignName,\n  adGroupId,\n  adGroupName,\n  adSource", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_cost_data"}, "model.snto_clickhouse.stg_robots": {"raw_sql": "{{\n    config(\n        tags=['filters'],\n        engine='MergeTree()'\n    )\n}}\n\nSELECT\n  date,\n  sessionId,\n  'robots' as type\nFROM\n  {{ source('dwh_site' ,'src_owox_sessions') }}\nLEFT ARRAY JOIN\n    device\n\twhere date = {{ var('execution_date') }}\nAND\n device.deviceCategory like '%robot%'\nGROUP BY\n  date,\n  sessionId,\n  type", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["filters"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_robots"], "unique_id": "model.snto_clickhouse.stg_robots", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_robots.sql", "original_file_path": "models/staging/stg_robots.sql", "name": "stg_robots", "alias": "stg_robots", "checksum": {"name": "sha256", "checksum": "fe9709d4d5bc5cc140557a934842f038cf2f3498f884d17137ab7cbf76b105f6"}, "tags": ["filters"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0421\u0435\u0441\u0441\u0438\u0438 \u0440\u043e\u0431\u043e\u0442\u043e\u0432", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "\u0422\u0438\u043f \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0420\u043e\u0431\u043e\u0442\u044b == 'robots'", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_robots.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["filters"], "engine": "MergeTree()"}, "created_at": 1651140246.9646416, "compiled_sql": "\n\nSELECT\n  date,\n  sessionId,\n  'robots' as type\nFROM\n  dwh_site.owoxbi_sessions\nLEFT ARRAY JOIN\n    device\n\twhere date = toDate(NOW()) - 10\nAND\n device.deviceCategory like '%robot%'\nGROUP BY\n  date,\n  sessionId,\n  type", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_robots"}, "model.snto_clickhouse.stg_owox_ecomm_purchase": {"raw_sql": "{{\n    config(\n      tags=['hits'],\n      engine='MergeTree()',\n      order_by=('clientId', 'sessionId'),\n      \tpartition_by=('date')\n    )\n}}\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n        hits.product.productQuantity,\n\t\thits.product.productPrice,\n        hits.transaction.transactionId\n\tFROM {{ source('dwh_site' ,'src_owox_sessions') }}\n\tLEFT ARRAY JOIN hits\n\tWHERE date = {{ var('execution_date') }}\n\tAND hits.eCommerceActionType = 'purchase'\n)\nSELECT\n    date,\n    ifNull(clientId, '') as clientId,\n    ifNull(sessionId,'') as sessionId, \n    ifNull(hits.hitId,'') as hitId,\n    ifNull(hits.product.productListName, '') as productListName,\n    ifNull(hits.product.productSku, '') as productSku,\n    ifNull(hits.product.productQuantity, 0) as productQuantity,\n    ifNull(hits.product.productPrice, 0) as productPrice,\n    ifNull(hits.transaction.transactionId, '') as transactionId\n  FROM cte\n  LEFT ARRAY JOIN hits.product.productListName, hits.product.productSku, hits.product.productPrice, hits.product.productQuantity", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "order_by": ["clientId", "sessionId"], "partition_by": "date", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_owox_ecomm_purchase"], "unique_id": "model.snto_clickhouse.stg_owox_ecomm_purchase", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_owox_ecomm_purchase.sql", "original_file_path": "models/staging/stg_owox_ecomm_purchase.sql", "name": "stg_owox_ecomm_purchase", "alias": "stg_owox_ecomm_purchase", "checksum": {"name": "sha256", "checksum": "26e89e5c8bbb0479d1f3f784cdf0bf11b0dd4da415594ae0868cffb4a87dd5a2"}, "tags": ["hits"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0441\u043e\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u044b\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0451\u043b \u043a\u043b\u0438\u043a", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productQuantity": {"name": "productQuantity", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0442\u043e\u0432\u0430\u0440\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0445", "meta": {}, "data_type": null, "quote": null, "tags": []}, "transactionId": {"name": "transactionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_owox_ecomm_purchase.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()", "order_by": ["clientId", "sessionId"], "partition_by": "date"}, "created_at": 1651140246.9557493, "compiled_sql": "\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n        hits.product.productQuantity,\n\t\thits.product.productPrice,\n        hits.transaction.transactionId\n\tFROM dwh_site.owoxbi_sessions\n\tLEFT ARRAY JOIN hits\n\tWHERE date = toDate(NOW()) - 10\n\tAND hits.eCommerceActionType = 'purchase'\n)\nSELECT\n    date,\n    ifNull(clientId, '') as clientId,\n    ifNull(sessionId,'') as sessionId, \n    ifNull(hits.hitId,'') as hitId,\n    ifNull(hits.product.productListName, '') as productListName,\n    ifNull(hits.product.productSku, '') as productSku,\n    ifNull(hits.product.productQuantity, 0) as productQuantity,\n    ifNull(hits.product.productPrice, 0) as productPrice,\n    ifNull(hits.transaction.transactionId, '') as transactionId\n  FROM cte\n  LEFT ARRAY JOIN hits.product.productListName, hits.product.productSku, hits.product.productPrice, hits.product.productQuantity", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_owox_ecomm_purchase"}, "model.snto_clickhouse.stg_owox_ecomm_adds": {"raw_sql": "{{\n    config(\n      tags=['hits'],\n      engine='MergeTree()',\n      order_by=('productListName', 'sessionId', 'hitId'),\n      \tpartition_by=('date')\n    )\n}}\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n\t\thits.product.productPrice,\n\t\thits.product.productQuantity,\n        hits.product.productName,\n        hits.eCommerceActionType as ecomActionType\n\tFROM {{ source('dwh_site' ,'src_owox_sessions') }}\n\tLEFT ARRAY JOIN hits\n\tWHERE date = {{ var('execution_date') }}\n\tAND hits.eCommerceActionType in ('add','remove')\n    GROUP BY\n        date,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n\t\thits.product.productPrice,\n\t\thits.product.productQuantity,\n        hits.product.productName,\n        hits.eCommerceActionType\n)\nSELECT\n\tdate,\n\tifNull(sessionId, '') as sessionId,\n\tifNull(clientId, '') as clientId,\n\tifNull(hits.hitId, '') as hitId,\n\tifNull(hits.product.productListName, '') as productListName,\n\tifNull(hits.product.productSku, '') as productSku,\n    ifNull(hits.product.productName, '') as productName,\n\tifNull(hits.product.productPrice, 0) as productPrice,\n\tifNull(hits.product.productQuantity, 0) as productQuantity,\n    ifNull(ecomActionType, '') as ecomActionType\nFROM cte\nLEFT ARRAY JOIN hits.product.productListName, hits.product.productSku, hits.product.productPrice, hits.product.productQuantity, hits.product.productName", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "order_by": ["productListName", "sessionId", "hitId"], "partition_by": "date", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_owox_ecomm_adds"], "unique_id": "model.snto_clickhouse.stg_owox_ecomm_adds", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_owox_ecomm_adds.sql", "original_file_path": "models/staging/stg_owox_ecomm_adds.sql", "name": "stg_owox_ecomm_adds", "alias": "stg_owox_ecomm_adds", "checksum": {"name": "sha256", "checksum": "9586127383d8db0a2f7139bc1b48e22a3de09dd2fb453e6c3e239fa75a9773be"}, "tags": ["hits"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f\u043c \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0432 ecommerce", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0451\u043b \u043a\u043b\u0438\u043a", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productQuantity": {"name": "productQuantity", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0442\u043e\u0432\u0430\u0440\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0451\u043d\u043d\u044b\u0445", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_owox_ecomm_adds.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()", "order_by": ["productListName", "sessionId", "hitId"], "partition_by": "date"}, "created_at": 1651140246.950409, "compiled_sql": "\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n\t\thits.product.productPrice,\n\t\thits.product.productQuantity,\n        hits.product.productName,\n        hits.eCommerceActionType as ecomActionType\n\tFROM dwh_site.owoxbi_sessions\n\tLEFT ARRAY JOIN hits\n\tWHERE date = toDate(NOW()) - 10\n\tAND hits.eCommerceActionType in ('add','remove')\n    GROUP BY\n        date,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n\t\thits.product.productPrice,\n\t\thits.product.productQuantity,\n        hits.product.productName,\n        hits.eCommerceActionType\n)\nSELECT\n\tdate,\n\tifNull(sessionId, '') as sessionId,\n\tifNull(clientId, '') as clientId,\n\tifNull(hits.hitId, '') as hitId,\n\tifNull(hits.product.productListName, '') as productListName,\n\tifNull(hits.product.productSku, '') as productSku,\n    ifNull(hits.product.productName, '') as productName,\n\tifNull(hits.product.productPrice, 0) as productPrice,\n\tifNull(hits.product.productQuantity, 0) as productQuantity,\n    ifNull(ecomActionType, '') as ecomActionType\nFROM cte\nLEFT ARRAY JOIN hits.product.productListName, hits.product.productSku, hits.product.productPrice, hits.product.productQuantity, hits.product.productName", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_owox_ecomm_adds"}, "model.snto_clickhouse.stg_owox_promotions": {"raw_sql": "{{\n    config(\n      tags=['hits'],\n      engine='MergeTree()',\n      order_by=('clientId', 'sessionId'),\n      \tpartition_by=('date')\n    )\n}}\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.promotion.promoCreative,\n        hits.promotion.promoName,\n        hits.promotion.promoId,\n        hits.promotion.promoPosition,\n        hits.promotionActionInfo\n\tFROM {{ source('dwh_site' ,'src_owox_sessions') }}\n\tLEFT ARRAY JOIN hits\n\tWHERE date = {{ var('execution_date') }}\n)\nSELECT\n    date,\n    ifNull(clientId, '') as clientId,\n    ifNull(sessionId, '') as sessionId, \n    ifNull(hits.hitId, '') as hitId,\n    ifNull(hits.promotion.promoCreative, '') as promoCreative,\n    ifNull(hits.promotion.promoName, '') as promoName,\n    ifNull( hits.promotion.promoPosition, '') as promoPosition,\n    ifNull(hits.promotion.promoId, '') as promoId,\n    ifNull(hits.promotionActionInfo, '') as promotionActionInfo\n  FROM cte\nLEFT ARRAY JOIN hits.promotion.promoCreative, hits.promotion.promoName, hits.promotion.promoPosition, hits.promotion.promoId\nWHERE hits.promotionActionInfo is not null\nAND not match(hits.promotion.promoName,'(\u0445\u0443\u0435|\u0445\u0443\u044f|\u0445\u0443\u044e)')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "order_by": ["clientId", "sessionId"], "partition_by": "date", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_owox_promotions"], "unique_id": "model.snto_clickhouse.stg_owox_promotions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_owox_promotions.sql", "original_file_path": "models/staging/stg_owox_promotions.sql", "name": "stg_owox_promotions", "alias": "stg_owox_promotions", "checksum": {"name": "sha256", "checksum": "a0733baa108aabbb8e9eaba4dcde44d86aa813e2f720c65aaab10954e7bcebf1"}, "tags": ["hits"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u0440\u0435\u043a\u043b\u0430\u043c\u0435", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promoCreative": {"name": "promoCreative", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0439 \u0430\u043a\u0446\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promoId": {"name": "promoId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u0440\u0435\u0430\u0442\u0438\u0432\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promoPosition": {"name": "promoPosition", "description": "\u041f\u043e\u0437\u0438\u0446\u0438\u044f \u043a\u0440\u0435\u0430\u0442\u0438\u0432\u0430 \u0432 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u043c \u0431\u043b\u043e\u043a\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "promotionActionInfo": {"name": "promotionActionInfo", "description": "B\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0440\u043e\u043c\u043e\u043a\u0440\u0435\u0430\u0442\u0438\u0432\u043e\u043c(view, click)", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_owox_promotions.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()", "order_by": ["clientId", "sessionId"], "partition_by": "date"}, "created_at": 1651140246.9599583, "compiled_sql": "\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.promotion.promoCreative,\n        hits.promotion.promoName,\n        hits.promotion.promoId,\n        hits.promotion.promoPosition,\n        hits.promotionActionInfo\n\tFROM dwh_site.owoxbi_sessions\n\tLEFT ARRAY JOIN hits\n\tWHERE date = toDate(NOW()) - 10\n)\nSELECT\n    date,\n    ifNull(clientId, '') as clientId,\n    ifNull(sessionId, '') as sessionId, \n    ifNull(hits.hitId, '') as hitId,\n    ifNull(hits.promotion.promoCreative, '') as promoCreative,\n    ifNull(hits.promotion.promoName, '') as promoName,\n    ifNull( hits.promotion.promoPosition, '') as promoPosition,\n    ifNull(hits.promotion.promoId, '') as promoId,\n    ifNull(hits.promotionActionInfo, '') as promotionActionInfo\n  FROM cte\nLEFT ARRAY JOIN hits.promotion.promoCreative, hits.promotion.promoName, hits.promotion.promoPosition, hits.promotion.promoId\nWHERE hits.promotionActionInfo is not null\nAND not match(hits.promotion.promoName,'(\u0445\u0443\u0435|\u0445\u0443\u044f|\u0445\u0443\u044e)')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_owox_promotions"}, "model.snto_clickhouse.stg_1c_order_details": {"raw_sql": "{{\n    config(\n      tags=['hits'],\n      engine='MergeTree()'\n    )\n}}\n\nWITH t as (\n  SELECT\n    *,\n    DATE(Order_Date_Create) as date\n  FROM\n    {{ source('dwh_business' ,'src_order_details') }}\n),\nmax as (\n  SELECT\n    Order_ID as ID,\n    max(Upload_Date) as max_date\n  FROM\n    {{ source('dwh_business' ,'src_order_details') }}\n  GROUP BY\n    ID\n)\n\nSelect\n  * EXCEPT(ID, max_date)\nFROM\n  t\n  INNER JOIN max ON t.Order_ID = ID\n  AND t.Upload_Date = max_date", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_business.src_order_details"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_1c_order_details"], "unique_id": "model.snto_clickhouse.stg_1c_order_details", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_1c_order_details.sql", "original_file_path": "models/staging/stg_1c_order_details.sql", "name": "stg_1c_order_details", "alias": "stg_1c_order_details", "checksum": {"name": "sha256", "checksum": "ce279bc7b8607e48216d6a46cffc90fb8455b97bf5e29ee06b1be08f5653e338"}, "tags": ["hits"], "refs": [], "sources": [["dwh_business", "src_order_details"]], "description": "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e \u0437\u0430\u043a\u0430\u0437\u0430\u043c \u0438\u0437 1\u0421", "columns": {"Order_Date_Create": {"name": "Order_Date_Create", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Distr": {"name": "Order_Date_Distr", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Last_Status_Date": {"name": "Order_Last_Status_Date", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_ID": {"name": "Order_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Initial_ID": {"name": "Order_Initial_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Region": {"name": "Region", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "City": {"name": "City", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Address": {"name": "Address", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_ID": {"name": "SKU_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU": {"name": "SKU", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Group": {"name": "SKU_Group", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Type": {"name": "SKU_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Customized": {"name": "SKU_Customized", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_PS": {"name": "SKU_PS", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_ID": {"name": "Client_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client": {"name": "Client", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Type": {"name": "Client_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Number": {"name": "Client_Number", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Number_Additional": {"name": "Client_Number_Additional", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Email": {"name": "Client_Email", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Service_Logistik_Free": {"name": "Service_Logistik_Free", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Service_Rise": {"name": "Service_Rise", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Corp": {"name": "Order_Corp", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Opt": {"name": "Order_Opt", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Center": {"name": "Logistics_Center", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Option": {"name": "Logistics_Option", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Prepayment_Required": {"name": "Prepayment_Required", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Payment_Type": {"name": "Payment_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Activity_Status": {"name": "Activity_Status", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Source": {"name": "Order_Source", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Dnis": {"name": "Dnis", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Manager": {"name": "Manager", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Responsible": {"name": "Responsible", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Middleman": {"name": "Middleman", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Operation_Type": {"name": "Operation_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Approval_Status": {"name": "Approval_Status", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Reason_Cancel": {"name": "Order_Reason_Cancel", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Discount_Reason": {"name": "Order_Discount_Reason", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Sum_without_Discount": {"name": "SKU_Sales_Sum_without_Discount", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Sum_with_Discount": {"name": "SKU_Sales_Sum_with_Discount", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Count": {"name": "SKU_Sales_Count", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Logistik_Sum": {"name": "Order_Logistik_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Rise_Sum": {"name": "Order_Rise_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Upload_Date": {"name": "Upload_Date", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Cost_Sum": {"name": "SKU_Cost_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Logistics": {"name": "Order_Date_Logistics", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Unit": {"name": "SKU_Unit", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Responsible_Cancel": {"name": "Order_Responsible_Cancel", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Gross_Profit": {"name": "SKU_Gross_Profit", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Brand": {"name": "SKU_Brand", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Promotion_Type": {"name": "SKU_Promotion_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Promo": {"name": "Order_Promo", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Loyalty_Card": {"name": "Order_Loyalty_Card", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Action": {"name": "Order_Action", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Artikul": {"name": "SKU_Artikul", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Nabor": {"name": "Nabor", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Nabor_Artikul": {"name": "Nabor_Artikul", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Document_GUID": {"name": "Document_GUID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PustayaKorzina": {"name": "PustayaKorzina", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "BroshennayaKorzina": {"name": "BroshennayaKorzina", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "TehnologicheskayaOtmena": {"name": "TehnologicheskayaOtmena", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_KontaktnoeLitso": {"name": "Client_KontaktnoeLitso", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_KontaktnoeLitso_ID": {"name": "Client_KontaktnoeLitso_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SessionID": {"name": "SessionID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "User_Session_ID": {"name": "User_Session_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_GUID": {"name": "SKU_GUID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Center_Source": {"name": "Logistics_Center_Source", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Comment": {"name": "Client_Comment", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Logistics_Calc": {"name": "Order_Date_Logistics_Calc", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "MarketingovayaAktivnost": {"name": "MarketingovayaAktivnost", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Company_Name": {"name": "Company_Name", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Source_Type": {"name": "Order_Source_Type", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_1c_order_details.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()"}, "created_at": 1651140246.9908192, "compiled_sql": "\n\nWITH t as (\n  SELECT\n    *,\n    DATE(Order_Date_Create) as date\n  FROM\n    dwh_business.Order_Details\n),\nmax as (\n  SELECT\n    Order_ID as ID,\n    max(Upload_Date) as max_date\n  FROM\n    dwh_business.Order_Details\n  GROUP BY\n    ID\n)\n\nSelect\n  * EXCEPT(ID, max_date)\nFROM\n  t\n  INNER JOIN max ON t.Order_ID = ID\n  AND t.Upload_Date = max_date", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_1c_order_details"}, "model.snto_clickhouse.stg_santon": {"raw_sql": "{{\n    config(\n        tags=['filters'],\n        engine='MergeTree()'\n    )\n}}\n\nWITH cte as (\n\tSELECT\n\t\tdate,\n\t\tsessionId,\n\t\thits.page.hostname,\n\t\t'santon' as type\n\tFROM\n        {{ source('dwh_site' ,'src_owox_sessions') }}\n\tLEFT ARRAY JOIN\n\t    hits\n\twhere date = {{ var('execution_date') }}\n)\nSELECT\n    date,\n    sessionId,\n    type\nFROM cte\nLEFT ARRAY JOIN hits.page.hostname\nWHERE\n\thits.page.hostname like '%sant-on%'\nGROUP BY\n\tdate,\n    sessionId,\n    type", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["filters"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_santon"], "unique_id": "model.snto_clickhouse.stg_santon", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_santon.sql", "original_file_path": "models/staging/stg_santon.sql", "name": "stg_santon", "alias": "stg_santon", "checksum": {"name": "sha256", "checksum": "f65c13fc4eeaa8d5ce44204cef8ac69ae3cc6997c0478b0a21b872332e543386"}, "tags": ["filters"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0421\u0435\u0441\u0441\u0438\u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u043e\u0432", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "\u0422\u0438\u043f \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 == 'santon'", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_santon.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["filters"], "engine": "MergeTree()"}, "created_at": 1651140246.9670546, "compiled_sql": "\n\nWITH cte as (\n\tSELECT\n\t\tdate,\n\t\tsessionId,\n\t\thits.page.hostname,\n\t\t'santon' as type\n\tFROM\n        dwh_site.owoxbi_sessions\n\tLEFT ARRAY JOIN\n\t    hits\n\twhere date = toDate(NOW()) - 10\n)\nSELECT\n    date,\n    sessionId,\n    type\nFROM cte\nLEFT ARRAY JOIN hits.page.hostname\nWHERE\n\thits.page.hostname like '%sant-on%'\nGROUP BY\n\tdate,\n    sessionId,\n    type", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_santon"}, "model.snto_clickhouse.stg_owox_ecomm_impressions": {"raw_sql": "{{\n    config(\n      tags=['hits'],\n      engine='MergeTree()',\n      order_by=('productListName', 'sessionId', 'hitId'),\n      \tpartition_by=('date')\n    )\n}}\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.impressionList,\n\t\thits.product.isImpression,\n\t\thits.product.productSku,\n\t\thits.product.position\n\tFROM {{ source('dwh_site' ,'src_owox_sessions') }}\n\tLEFT ARRAY JOIN hits\n\tWHERE date = {{ var('execution_date') }}\n)\nSELECT\n\tdate,\n\tifNull(sessionId, '') as sessionId,\n\tifNull(clientId, '') as clientId,\n\tifNull(hits.hitId, '') as hitId,\n\tifNull(hits.product.impressionList, '') as productListName,\n\tifNull(hits.product.productSku, '') as productSku,\n\tifNull(hits.product.position, 0) as position\nFROM cte\nLEFT ARRAY JOIN hits.product.isImpression, hits.product.impressionList, hits.product.productSku, hits.product.position\nWHERE hits.product.isImpression = 1", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "order_by": ["productListName", "sessionId", "hitId"], "partition_by": "date", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_owox_ecomm_impressions"], "unique_id": "model.snto_clickhouse.stg_owox_ecomm_impressions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_owox_ecomm_impressions.sql", "original_file_path": "models/staging/stg_owox_ecomm_impressions.sql", "name": "stg_owox_ecomm_impressions", "alias": "stg_owox_ecomm_impressions", "checksum": {"name": "sha256", "checksum": "67191ae13477fd53bd462d909a8a114c1e0a1e00e73d1b40725fadbe814cd4a2"}, "tags": ["hits"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u043c \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u0442\u043e\u0432\u0430\u0440\u0430 ecommerce", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "position": {"name": "position", "description": "\u041f\u043e\u0437\u0438\u0446\u0438\u044f \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_owox_ecomm_impressions.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()", "order_by": ["productListName", "sessionId", "hitId"], "partition_by": "date"}, "created_at": 1651140246.941086, "compiled_sql": "\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.impressionList,\n\t\thits.product.isImpression,\n\t\thits.product.productSku,\n\t\thits.product.position\n\tFROM dwh_site.owoxbi_sessions\n\tLEFT ARRAY JOIN hits\n\tWHERE date = toDate(NOW()) - 10\n)\nSELECT\n\tdate,\n\tifNull(sessionId, '') as sessionId,\n\tifNull(clientId, '') as clientId,\n\tifNull(hits.hitId, '') as hitId,\n\tifNull(hits.product.impressionList, '') as productListName,\n\tifNull(hits.product.productSku, '') as productSku,\n\tifNull(hits.product.position, 0) as position\nFROM cte\nLEFT ARRAY JOIN hits.product.isImpression, hits.product.impressionList, hits.product.productSku, hits.product.position\nWHERE hits.product.isImpression = 1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_owox_ecomm_impressions"}, "model.snto_clickhouse.stg_owox_sessions": {"raw_sql": "{{\n    config(\n        materialized='table',\n        tags=['filters'],\n        engine='MergeTree()'\n    )\n}}\nWITH\n-- \u0437\u0430\u0431\u0438\u0440\u0430\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438\u0437 owox\ntraf as (\n  SELECT\n    date,\n    clientId,\n    sessionId,\n    visitNumber,\n    trafficSource.source as source,\n    trafficSource.medium as medium,\n    trafficSource.campaign as campaign,\n    trafficSource.adContent as adContent,\n    trafficSource.keyword as keyword,\n    device.deviceCategory as deviceCategory,\n    device.browser as browser,\n    device.browserVersion as browserVersion,\n    device.operatingSystem as operatingSystem,\n    device.operatingSystemVersion as operatingSystemVersion,\n    device.mobileDeviceInfo as mobileDeviceInfo,\n    device.ip as ip,\n    device.userAgent as userAgent,\n    device.language as language,\n    geoNetwork.country as country,\n    geoNetwork.region as region,\n    geoNetwork.city as city,\n    geoNetwork.latitude as latitude,\n    geoNetwork.longitude as longitude,\n    sum(totals.events + totals.pageviews) as check_sum\n  FROM {{ source('dwh_site' ,'src_owox_sessions') }}\n  LEFT ARRAY JOIN trafficSource, device, geoNetwork,totals\n  WHERE date = {{ var('execution_date') }}\n  GROUP BY\n    date,\n    clientId,\n    sessionId,\n    visitNumber,\n    trafficSource.source,\n    trafficSource.medium,\n    trafficSource.campaign,\n    trafficSource.adContent,\n    trafficSource.keyword,\n    device.deviceCategory,\n    device.browser,\n    device.browserVersion,\n    device.operatingSystem,\n    device.operatingSystemVersion,\n    device.mobileDeviceInfo,\n    device.ip,\n    device.userAgent,\n    device.language,\n    geoNetwork.country,\n    geoNetwork.region,\n    geoNetwork.city,\n    geoNetwork.latitude,\n    geoNetwork.longitude\n)\nSelect *\nFROM traf\nWHERE check_sum > 0", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["filters"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_owox_sessions"], "unique_id": "model.snto_clickhouse.stg_owox_sessions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_owox_sessions.sql", "original_file_path": "models/staging/stg_owox_sessions.sql", "name": "stg_owox_sessions", "alias": "stg_owox_sessions", "checksum": {"name": "sha256", "checksum": "533d806ffe671a799922169df0ba66f0b94617153fe6bab62c2275cc3df4352f"}, "tags": ["filters"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0443", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "visitNumber": {"name": "visitNumber", "description": "\u041f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0432\u0438\u0437\u0438\u0442\u0430 \u0437\u0430 \u0432\u0441\u044e \u0438\u0441\u0442\u043e\u0440\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "source": {"name": "source", "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0442\u0440\u0430\u0444\u0438\u043a\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "medium": {"name": "medium", "description": "\u041a\u0430\u043d\u0430\u043b \u0442\u0440\u0430\u0444\u0438\u043a\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaign": {"name": "campaign", "description": "\u0420\u0435\u043a\u043b\u0430\u043c\u043d\u0430\u044f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adContent": {"name": "adContent", "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "keyword": {"name": "keyword", "description": "\u041a\u043b\u044e\u0447\u0435\u0432\u0430\u044f \u0444\u0440\u0430\u0437\u0430 \u0438\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "deviceCategory": {"name": "deviceCategory", "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browser": {"name": "browser", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "browserVersion": {"name": "browserVersion", "description": "\u0412\u0435\u0440\u0441\u0438\u044f \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "operatingSystem": {"name": "operatingSystem", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "operatingSystemVersion": {"name": "operatingSystemVersion", "description": "\u0412\u0435\u0440\u0441\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "mobileDeviceInfo": {"name": "mobileDeviceInfo", "description": "\u041c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u043e\u043c\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0443", "meta": {}, "data_type": null, "quote": null, "tags": []}, "ip": {"name": "ip", "description": "\u0410\u0439\u043f\u0438-\u0430\u0434\u0440\u0435\u0441 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "userAgent": {"name": "userAgent", "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u044e\u0437\u0435\u0440-\u0430\u0433\u0435\u043d\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "language": {"name": "language", "description": "\u042f\u0437\u044b\u043a \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "country": {"name": "country", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "region": {"name": "region", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u043e\u043d\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "city": {"name": "city", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u043e\u0440\u043e\u0434\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "latitude": {"name": "latitude", "description": "\u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0448\u0438\u0440\u043e\u0442\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "longitude": {"name": "longitude", "description": "\u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0434\u043e\u043b\u0433\u043e\u0442\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_owox_sessions.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["filters"], "engine": "MergeTree()"}, "created_at": 1651140246.9372993, "compiled_sql": "\nWITH\n-- \u0437\u0430\u0431\u0438\u0440\u0430\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438\u0437 owox\ntraf as (\n  SELECT\n    date,\n    clientId,\n    sessionId,\n    visitNumber,\n    trafficSource.source as source,\n    trafficSource.medium as medium,\n    trafficSource.campaign as campaign,\n    trafficSource.adContent as adContent,\n    trafficSource.keyword as keyword,\n    device.deviceCategory as deviceCategory,\n    device.browser as browser,\n    device.browserVersion as browserVersion,\n    device.operatingSystem as operatingSystem,\n    device.operatingSystemVersion as operatingSystemVersion,\n    device.mobileDeviceInfo as mobileDeviceInfo,\n    device.ip as ip,\n    device.userAgent as userAgent,\n    device.language as language,\n    geoNetwork.country as country,\n    geoNetwork.region as region,\n    geoNetwork.city as city,\n    geoNetwork.latitude as latitude,\n    geoNetwork.longitude as longitude,\n    sum(totals.events + totals.pageviews) as check_sum\n  FROM dwh_site.owoxbi_sessions\n  LEFT ARRAY JOIN trafficSource, device, geoNetwork,totals\n  WHERE date = toDate(NOW()) - 10\n  GROUP BY\n    date,\n    clientId,\n    sessionId,\n    visitNumber,\n    trafficSource.source,\n    trafficSource.medium,\n    trafficSource.campaign,\n    trafficSource.adContent,\n    trafficSource.keyword,\n    device.deviceCategory,\n    device.browser,\n    device.browserVersion,\n    device.operatingSystem,\n    device.operatingSystemVersion,\n    device.mobileDeviceInfo,\n    device.ip,\n    device.userAgent,\n    device.language,\n    geoNetwork.country,\n    geoNetwork.region,\n    geoNetwork.city,\n    geoNetwork.latitude,\n    geoNetwork.longitude\n)\nSelect *\nFROM traf\nWHERE check_sum > 0", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_owox_sessions"}, "model.snto_clickhouse.stg_owox_hits": {"raw_sql": "{{\n    config(\n      tags=['hits'],\n      engine='MergeTree()',\n      order_by=('hitType', 'pagePath'),\n      \tpartition_by=('date')\n    )\n}}\nWITH cte as (\n-- \u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0441\u0435\u0441\u0441\u0438\u0438, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u0447\u043a\u0443 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438\n-- \u0440\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 hits\n    Select\n        date,\n        clientId,\n        sessionId,\n        hits.hitId,\n        hits.timestamp,\n        hits.type,\n        hits.isInteraction,\n        hits.referer,\n        hits.referralPath,\n        hits.eventInfo. eventCategory,\n        hits.eventInfo. eventAction,\n        hits.eventInfo. eventLabel,\n        hits.eventInfo. eventValue,\n        hits.page.hostname,\n        hits.pagePath,\n        hits.page.pageTitle\n    FROM {{ source('dwh_site' ,'src_owox_sessions') }}\n    LEFT ARRAY JOIN hits\n\twhere date = {{ var('execution_date') }}\n    AND hits.type in ('pageview', 'event')\n),\ndf as (\n-- \u0440\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b\n\tSelect\n        date,\n        clientId,\n        sessionId,\n        hits.hitId as hitId,\n        hits.timestamp as hitTimestamp,\n        hits.type as hitType,\n        hits.isInteraction as isInteraction,\n        hits.referer as referer,\n        hits.referralPath as referralPath,\n        hits.eventInfo. eventCategory as eventCategory,\n        hits.eventInfo. eventAction as eventAction,\n        hits.eventInfo. eventLabel as eventLabel,\n        hits.eventInfo. eventValue as eventValue,\n        hits.page.hostname as hostname,\n        hits.pagePath as pageUrl,\n        replaceRegexpAll(hits.pagePath, '\\?.*', '') as pagePath,\n        hits.page.pageTitle as pageTitle\n    FROM cte\n    LEFT ARRAY JOIN hits.eventInfo.eventCategory, hits.eventInfo.eventAction, hits.eventInfo.eventLabel, hits.eventInfo.eventValue, hits.page.hostname, hits.page.pageTitle\n)\nSELECT\n   date,\n    ifNull(clientId, '') as clientId,\n    ifNull(sessionId, '') as sessionId,\n    ifNull(hitId, '') as hitId,\n    ifNull(hitTimestamp, 0) as hitTimestamp,\n    ifNull(hitType, '') as hitType,\n    isInteraction,\n    ifNull(referer, '') as referer,\n    ifNull(referralPath, '') as referralPath,\n    ifNull(eventCategory, '') as eventCategory,\n    ifNull(eventAction, '') as eventAction,\n    ifNull(eventLabel, '') as eventLabel, \n    ifNull(eventValue, '') as eventValue,\n    ifNull(hostname, '') as hostname,\n    ifNull(pageUrl, '') as pageUrl,\n    ifNull(pagePath, '') as pagePath,\n    ifNull(pageTitle, '') as pageTitle\nFROM df\nGROUP BY\n    date,\n    clientId,\n    sessionId,\n    hitId,\n    hitTimestamp,\n    hitType,\n    isInteraction,\n    referer,\n    referralPath,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    hostname,\n    pageUrl,\n    pagePath,\n    pageTitle", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "order_by": ["hitType", "pagePath"], "partition_by": "date", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_owox_hits"], "unique_id": "model.snto_clickhouse.stg_owox_hits", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_owox_hits.sql", "original_file_path": "models/staging/stg_owox_hits.sql", "name": "stg_owox_hits", "alias": "stg_owox_hits", "checksum": {"name": "sha256", "checksum": "c469f5bea2dbf69037c781e48039e182e0c6e37c2812500aa0d4db300fbdad11"}, "tags": ["hits"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u044b\u043c \u0440\u0430\u0441\u0445\u043e\u0434\u0430\u043c", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitTimestamp": {"name": "hitTimestamp", "description": "\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u0435\u0442\u043a\u0430 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitType": {"name": "hitType", "description": "\u0422\u0438\u043f \u0445\u0438\u0442\u0430. Event \u0438\u043b\u0438 pageview", "meta": {}, "data_type": null, "quote": null, "tags": []}, "isInteraction": {"name": "isInteraction", "description": "\u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0445\u0438\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043c", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referer": {"name": "referer", "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referralPath": {"name": "referralPath", "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventCategory": {"name": "eventCategory", "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventAction": {"name": "eventAction", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventLabel": {"name": "eventLabel", "description": "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0435 \u0432 \u0441\u043e\u0431\u044b\u0442\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventValue": {"name": "eventValue", "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hostname": {"name": "hostname", "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pagePath": {"name": "pagePath", "description": "\u041f\u0443\u0442\u044c \u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0431\u0435\u0437 GET-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageTitle": {"name": "pageTitle", "description": "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0432 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageUrl": {"name": "pageUrl", "description": "\u041f\u043e\u043b\u043d\u0430\u044f \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_owox_hits.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()", "order_by": ["hitType", "pagePath"], "partition_by": "date"}, "created_at": 1651140246.929629, "compiled_sql": "\nWITH cte as (\n-- \u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0432\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0441\u0435\u0441\u0441\u0438\u0438, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u0447\u043a\u0443 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438\n-- \u0440\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 hits\n    Select\n        date,\n        clientId,\n        sessionId,\n        hits.hitId,\n        hits.timestamp,\n        hits.type,\n        hits.isInteraction,\n        hits.referer,\n        hits.referralPath,\n        hits.eventInfo. eventCategory,\n        hits.eventInfo. eventAction,\n        hits.eventInfo. eventLabel,\n        hits.eventInfo. eventValue,\n        hits.page.hostname,\n        hits.pagePath,\n        hits.page.pageTitle\n    FROM dwh_site.owoxbi_sessions\n    LEFT ARRAY JOIN hits\n\twhere date = toDate(NOW()) - 10\n    AND hits.type in ('pageview', 'event')\n),\ndf as (\n-- \u0440\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b\n\tSelect\n        date,\n        clientId,\n        sessionId,\n        hits.hitId as hitId,\n        hits.timestamp as hitTimestamp,\n        hits.type as hitType,\n        hits.isInteraction as isInteraction,\n        hits.referer as referer,\n        hits.referralPath as referralPath,\n        hits.eventInfo. eventCategory as eventCategory,\n        hits.eventInfo. eventAction as eventAction,\n        hits.eventInfo. eventLabel as eventLabel,\n        hits.eventInfo. eventValue as eventValue,\n        hits.page.hostname as hostname,\n        hits.pagePath as pageUrl,\n        replaceRegexpAll(hits.pagePath, '\\?.*', '') as pagePath,\n        hits.page.pageTitle as pageTitle\n    FROM cte\n    LEFT ARRAY JOIN hits.eventInfo.eventCategory, hits.eventInfo.eventAction, hits.eventInfo.eventLabel, hits.eventInfo.eventValue, hits.page.hostname, hits.page.pageTitle\n)\nSELECT\n   date,\n    ifNull(clientId, '') as clientId,\n    ifNull(sessionId, '') as sessionId,\n    ifNull(hitId, '') as hitId,\n    ifNull(hitTimestamp, 0) as hitTimestamp,\n    ifNull(hitType, '') as hitType,\n    isInteraction,\n    ifNull(referer, '') as referer,\n    ifNull(referralPath, '') as referralPath,\n    ifNull(eventCategory, '') as eventCategory,\n    ifNull(eventAction, '') as eventAction,\n    ifNull(eventLabel, '') as eventLabel, \n    ifNull(eventValue, '') as eventValue,\n    ifNull(hostname, '') as hostname,\n    ifNull(pageUrl, '') as pageUrl,\n    ifNull(pagePath, '') as pagePath,\n    ifNull(pageTitle, '') as pageTitle\nFROM df\nGROUP BY\n    date,\n    clientId,\n    sessionId,\n    hitId,\n    hitTimestamp,\n    hitType,\n    isInteraction,\n    referer,\n    referralPath,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    hostname,\n    pageUrl,\n    pagePath,\n    pageTitle", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_owox_hits"}, "model.snto_clickhouse.stg_owox_ecomm_clicks": {"raw_sql": "{{\n    config(\n      tags=['hits'],\n      engine='MergeTree()',\n      order_by=('productListName', 'sessionId', 'hitId'),\n      \tpartition_by=('date')\n    )\n}}\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n\t\thits.product.productPrice,\n\t\thits.product.position,\n\t\thits.promotion.promoId\n\tFROM {{ source('dwh_site' ,'src_owox_sessions') }}\n\tLEFT ARRAY JOIN hits\n\tWHERE date = {{ var('execution_date') }}\n\tAND hits.eCommerceActionType = 'click'\n)\nSELECT\n\tdate,\n\tifNull(sessionId, '') as sessionId,\n\tifNull(clientId, '') as clientId,\n\tifNull(hits.hitId, '') as hitId,\n\tifNull(hits.product.productListName, '') as productListName,\n\tifNull(hits.product.productSku, '') as productSku,\n\tifNull(hits.product.productPrice, 0) as productPrice,\n\tifNull(hits.product.position, 0) as position\nFROM cte\nLEFT ARRAY JOIN hits.product.productListName, hits.product.productSku, hits.product.productPrice, hits.product.position\nWHERE hits.promotion.promoId is null", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.snto_clickhouse.dwh_site.src_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["hits"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "order_by": ["productListName", "sessionId", "hitId"], "partition_by": "date", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "staging", "stg_owox_ecomm_clicks"], "unique_id": "model.snto_clickhouse.stg_owox_ecomm_clicks", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "staging/stg_owox_ecomm_clicks.sql", "original_file_path": "models/staging/stg_owox_ecomm_clicks.sql", "name": "stg_owox_ecomm_clicks", "alias": "stg_owox_ecomm_clicks", "checksum": {"name": "sha256", "checksum": "40ba4c8febdf9ad2cec6c0d2f06fffa4b0df87992fa484ac315bd2e147de7e39"}, "tags": ["hits"], "refs": [], "sources": [["dwh_site", "src_owox_sessions"]], "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043a\u043b\u0438\u043a\u0430\u043c ecommerce", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productListName": {"name": "productListName", "description": "\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043b\u0438\u0441\u0442\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u0438\u043b\u0441\u044f \u0442\u043e\u0432\u0430\u0440, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u0451\u043b \u043a\u043b\u0438\u043a", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productSku": {"name": "productSku", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0442\u043e\u0432\u0430\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "productPrice": {"name": "productPrice", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c,\u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u043a\u043b\u0438\u043a\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "position": {"name": "position", "description": "\u041f\u043e\u0437\u0438\u0446\u0438\u044f \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/staging/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/staging/stg_owox_ecomm_clicks.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["hits"], "engine": "MergeTree()", "order_by": ["productListName", "sessionId", "hitId"], "partition_by": "date"}, "created_at": 1651140246.946524, "compiled_sql": "\nWITH cte as (\n\tSelect\n\t\tdate,\n\t\tsessionId,\n\t\tclientId,\n\t\thits.hitId,\n\t\thits.product.productListName,\n\t\thits.product.productSku,\n\t\thits.product.productPrice,\n\t\thits.product.position,\n\t\thits.promotion.promoId\n\tFROM dwh_site.owoxbi_sessions\n\tLEFT ARRAY JOIN hits\n\tWHERE date = toDate(NOW()) - 10\n\tAND hits.eCommerceActionType = 'click'\n)\nSELECT\n\tdate,\n\tifNull(sessionId, '') as sessionId,\n\tifNull(clientId, '') as clientId,\n\tifNull(hits.hitId, '') as hitId,\n\tifNull(hits.product.productListName, '') as productListName,\n\tifNull(hits.product.productSku, '') as productSku,\n\tifNull(hits.product.productPrice, 0) as productPrice,\n\tifNull(hits.product.position, 0) as position\nFROM cte\nLEFT ARRAY JOIN hits.product.productListName, hits.product.productSku, hits.product.productPrice, hits.product.position\nWHERE hits.promotion.promoId is null", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.stg_owox_ecomm_clicks"}, "model.snto_clickhouse.pre_filters": {"raw_sql": "{{\n    config(\n        materialized=materialized_type(),\n        tags=['filters'],\n        engine='MergeTree()'\n    )\n}}\n\nWITH cte as (\n  SELECT\n      *\n  FROM\n    {{ ref('stg_bots') }}\n  UNION ALL\n  SELECT\n      *\n  FROM\n    {{ ref('stg_robots') }}\n  UNION ALL\n  SELECT\n      *\n  FROM\n    {{ ref('stg_santon') }}\n)\n\nSELECT\n  date,\n  sessionId,\n  max(type) as type\nFROM cte\n{% if is_incremental() %}\n  -- this filter will only be applied on an incremental run\n  where date not in (select distinct date from {{ this }})\n{% endif %}\nGROUP BY\n  date,\n  sessionId", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.snto_clickhouse.materialized_type", "macro.dbt.is_incremental"], "nodes": ["model.snto_clickhouse.stg_bots", "model.snto_clickhouse.stg_robots", "model.snto_clickhouse.stg_santon"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["filters"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "prepare", "pre_filters"], "unique_id": "model.snto_clickhouse.pre_filters", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "prepare/pre_filters.sql", "original_file_path": "models/prepare/pre_filters.sql", "name": "pre_filters", "alias": "pre_filters", "checksum": {"name": "sha256", "checksum": "048741438c39310cd04571292c7132350dc5301c192d6ad93cc4350c9d837f0b"}, "tags": ["filters"], "refs": [["stg_bots"], ["stg_robots"], ["stg_santon"]], "sources": [], "description": "# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 pre_filters\n\u041c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0442\u0440\u0451\u043c \u0442\u0438\u043f\u0430\u043c \u0442\u0440\u0430\u0444\u0438\u043a\u0430:\n- \u0411\u043e\u0442\u044b\n- \u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438\n- \u0420\u043e\u0431\u043e\u0442\u044b\n\n**\u0411\u043e\u0442\u044b** - \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0442\u0438\u043f \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0432 OWOX \u043f\u0440\u0438\u0437\u043d\u0430\u043a **device.isBot = true**  \n**\u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438** - \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u043f\u043e\u0434\u0434\u043e\u043c\u0435\u043d\u0430 **dev.sant-on**  \n**\u0420\u043e\u0431\u043e\u0442\u044b** - \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0432 OWOX \u043f\u0440\u0438\u0437\u043d\u0430\u043a **deviceCategory = 'robot'**  \n\n\u041c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u044b\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0435\u0441\u0441\u0438\u0439 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446 \u0432 \u0441\u043b\u043e\u0435 **presets**\n\n**\u0414\u0430\u0442\u0430 min:** 2021-08-01  \n**\u0414\u0430\u0442\u0430 max:** 2022-04-09  \n\n**\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:** \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u043e \u0432 14:30\n\n***\n## \u0417\u0430\u0434\u0430\u0447\u0438\n1. [\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 filters \u0432 CH](https://snto.kaiten.ru/4714801)\n\n\n*** \n### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u043e\u0442\u0447\u0435\u0442\u0430\u0445\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\n\n***", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "\u0422\u0438\u043f \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0411\u043e\u0442\u044b == 'bots', \u0440\u043e\u0431\u043e\u0442\u044b == 'robots', \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 == 'santon'", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/prepare/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/prepare/pre_filters.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "tags": ["filters"], "engine": "MergeTree()"}, "created_at": 1651140247.1058931, "compiled_sql": "\n\nWITH cte as (\n  SELECT\n      *\n  FROM\n    analytics_prod.stg_bots\n  UNION ALL\n  SELECT\n      *\n  FROM\n    analytics_prod.stg_robots\n  UNION ALL\n  SELECT\n      *\n  FROM\n    analytics_prod.stg_santon\n)\n\nSELECT\n  date,\n  sessionId,\n  max(type) as type\nFROM cte\n\n  -- this filter will only be applied on an incremental run\n  where date not in (select distinct date from analytics_prod.pre_filters)\n\nGROUP BY\n  date,\n  sessionId", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.pre_filters"}, "model.snto_clickhouse.pre_owox_hits": {"raw_sql": "{{\n    config(\n        materialized='table',\n        tags=['filters'],\n        engine='MergeTree()',\n\t\torder_by=('hitType', 'pagePath'),\n      \tpartition_by=('date')\n    )\n}}\nWITH t as (\n\tSELECT\n\t\t*,\n\t\trow_number() over(partition by sessionId order by hitTimestamp) as rn\n\tFROM {{ ref('stg_owox_hits') }}\t\n),\nt2 as (\n\tSELECT\n\t\t*,\n\t\tCASE\n        \tWHEN rn = 1 and hitType = 'event' THEN 'fix'\n            ELSE 'non_fix'\n        END as fix_pageview\n\tFROM t\t \n),\n-- \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c pageview \u0432 \u0441\u0435\u0441\u0441\u0438\u0438 \u0441 \u0431\u0430\u0433\u043e\u043c\nfix as (\n    Select *\n    FROM t2\n    UNION ALL\n    Select\n    date,\n    clientId,\n    sessionId,\n    toString(generateUUIDv4()) as hitId, --\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c hitId\n    hitTimestamp - 100 as hitTimestamp, --\u043e\u0442\u043d\u0438\u043c\u0430\u0435\u043c \u0438\u0437 timestamp \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0435\u0432\u0435\u043d\u0442\u0430 0.1\u0441\u0435\u043a, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    'pageview' as hitType,\n    true as isInteraction,\n    referer,\n    referralPath,\n    null as eventCategory,\n    null as eventAction,\n    null as eventLabel,\n    null as eventValue,\n    hostname,\n    pageUrl,\n    pagePath,\n    pageTitle,\n\t0 as rn,\n    fix_pageview\nFROM t2\nWHERE fix_pageview = 'fix'\n)\nSELECT *,\n\trow_number() over(partition by sessionId order by hitTimestamp) as for_landingPage\nFROM fix", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["filters"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "order_by": ["hitType", "pagePath"], "partition_by": "date", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "prepare", "pre_owox_hits"], "unique_id": "model.snto_clickhouse.pre_owox_hits", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "prepare/pre_owox_hits.sql", "original_file_path": "models/prepare/pre_owox_hits.sql", "name": "pre_owox_hits", "alias": "pre_owox_hits", "checksum": {"name": "sha256", "checksum": "5e442cdc08320c0f616e5928c9d2fed540892e8a1019a8932b041444c94cf9c0"}, "tags": ["filters"], "refs": [["stg_owox_hits"]], "sources": [], "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435", "columns": {"date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitId": {"name": "hitId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitTimestamp": {"name": "hitTimestamp", "description": "Timestamp \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hitType": {"name": "hitType", "description": "\u0422\u0438\u043f \u0445\u0438\u0442\u0430. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f('pageview', 'event')", "meta": {}, "data_type": null, "quote": null, "tags": []}, "isInteraction": {"name": "isInteraction", "description": "\u0411\u044b\u043b \u043b\u0438 \u0445\u0438\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043c", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referer": {"name": "referer", "description": "\u0420\u0435\u0444\u0435\u0440\u0435\u0440", "meta": {}, "data_type": null, "quote": null, "tags": []}, "referralPath": {"name": "referralPath", "description": "\u041f\u0443\u0442\u044c \u0440\u0435\u0444\u0435\u0440\u0435\u0440\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventCategory": {"name": "eventCategory", "description": "\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventAction": {"name": "eventAction", "description": "\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043f\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u044e. \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventLabel": {"name": "eventLabel", "description": "\u042f\u0440\u043b\u044b\u043a \u0441\u043e\u0431\u044b\u0442\u0438\u044f. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "eventValue": {"name": "eventValue", "description": "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageUrl": {"name": "pageUrl", "description": "\u041f\u043e\u043b\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 GET-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pagePath": {"name": "pagePath", "description": "\u0410\u0434\u0440\u0435\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0431\u0435\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageTitle": {"name": "pageTitle", "description": "\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0441\u0442\u0440\u0430\u043d\u0438\u0446", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hits_sequence": {"name": "hits_sequence", "description": "\u041f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0445\u0438\u0442\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pageview_sequence": {"name": "pageview_sequence", "description": "\u041f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u0439 \u043d\u043e\u043c\u0435\u0440 \u0445\u0438\u0442\u0430 \u0441 \u0442\u0438\u043f\u043e\u043c 'pageview'", "meta": {}, "data_type": null, "quote": null, "tags": []}, "isLastPage": {"name": "isLastPage", "description": "\u0411\u044b\u043b\u0430 \u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0432 \u0441\u0435\u0441\u0441\u0438\u0438. 1 - \u0431\u044b\u043b\u0430, 0 - \u043d\u0435 \u0431\u044b\u043b\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "isFirstPage": {"name": "isFirstPage", "description": "\u0411\u044b\u043b\u0430 \u043b\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432 \u0441\u0435\u0441\u0441\u0438\u0438. 1 - \u0431\u044b\u043b\u0430, 0 - \u043d\u0435 \u0431\u044b\u043b\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://models/prepare/schema.yml", "compiled_path": "target/compiled/snto_clickhouse/models/prepare/pre_owox_hits.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["filters"], "engine": "MergeTree()", "order_by": ["hitType", "pagePath"], "partition_by": "date"}, "created_at": 1651140247.1121142, "compiled_sql": "\nWITH t as (\n\tSELECT\n\t\t*,\n\t\trow_number() over(partition by sessionId order by hitTimestamp) as rn\n\tFROM analytics_prod.stg_owox_hits\t\n),\nt2 as (\n\tSELECT\n\t\t*,\n\t\tCASE\n        \tWHEN rn = 1 and hitType = 'event' THEN 'fix'\n            ELSE 'non_fix'\n        END as fix_pageview\n\tFROM t\t \n),\n-- \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c pageview \u0432 \u0441\u0435\u0441\u0441\u0438\u0438 \u0441 \u0431\u0430\u0433\u043e\u043c\nfix as (\n    Select *\n    FROM t2\n    UNION ALL\n    Select\n    date,\n    clientId,\n    sessionId,\n    toString(generateUUIDv4()) as hitId, --\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c hitId\n    hitTimestamp - 100 as hitTimestamp, --\u043e\u0442\u043d\u0438\u043c\u0430\u0435\u043c \u0438\u0437 timestamp \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0435\u0432\u0435\u043d\u0442\u0430 0.1\u0441\u0435\u043a, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    'pageview' as hitType,\n    true as isInteraction,\n    referer,\n    referralPath,\n    null as eventCategory,\n    null as eventAction,\n    null as eventLabel,\n    null as eventValue,\n    hostname,\n    pageUrl,\n    pagePath,\n    pageTitle,\n\t0 as rn,\n    fix_pageview\nFROM t2\nWHERE fix_pageview = 'fix'\n)\nSELECT *,\n\trow_number() over(partition by sessionId order by hitTimestamp) as for_landingPage\nFROM fix", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.pre_owox_hits"}, "model.snto_clickhouse.pre_owox_sessions": {"raw_sql": "{{\n    config(\n        materialized='table',\n        tags=['filters'],\n        engine='MergeTree()'\n    )\n}}\nWITH\n-- \u0437\u0430\u0431\u0438\u0440\u0430\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438\u0437 owox\ntraf as (\n  SELECT\n    *\n  FROM {{ ref(\"stg_owox_sessions\") }}\n)\nSelect *\nFROM traf", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.snto_clickhouse.stg_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": ["filters"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "engine": "MergeTree()", "post-hook": [], "pre-hook": []}, "database": null, "schema": "analytics_prod", "fqn": ["snto_clickhouse", "prepare", "pre_owox_sessions"], "unique_id": "model.snto_clickhouse.pre_owox_sessions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "prepare/pre_owox_sessions.sql", "original_file_path": "models/prepare/pre_owox_sessions.sql", "name": "pre_owox_sessions", "alias": "pre_owox_sessions", "checksum": {"name": "sha256", "checksum": "affc7ee18bb60bdc322ba94edb88f484b72c91e7f78908dfc4ae39e7c5ee96db"}, "tags": ["filters"], "refs": [["stg_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/prepare/pre_owox_sessions.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["filters"], "engine": "MergeTree()"}, "created_at": 1651140246.7596586, "compiled_sql": "\nWITH\n-- \u0437\u0430\u0431\u0438\u0440\u0430\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0438\u0437 owox\ntraf as (\n  SELECT\n    *\n  FROM analytics_prod.stg_owox_sessions\n)\nSelect *\nFROM traf", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "analytics_prod.pre_owox_sessions"}, "test.snto_clickhouse.not_null_presets_owox_hits_clientId.6ae9628a7f": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('presets_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_hits_clientId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_hits_clientId.6ae9628a7f", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_hits_clientId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_hits_clientId", "alias": "not_null_presets_owox_hits_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_hits_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.8770297, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_hits\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.presets_owox_hits"}, "test.snto_clickhouse.not_null_presets_owox_hits_sessionId.8ceaa0b0ad": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('presets_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_hits_sessionId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_hits_sessionId.8ceaa0b0ad", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_hits_sessionId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_hits_sessionId", "alias": "not_null_presets_owox_hits_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_hits_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.8790202, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_hits\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.presets_owox_hits"}, "test.snto_clickhouse.relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_.463a8e6f6d": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_presets_owox_hit_146beb81203fc4d6498401a278f21ddb\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('presets_owox_sessions')", "field": "sessionId", "column_name": "sessionId", "model": "{{ get_where_subquery(ref('presets_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_sessions", "model.snto_clickhouse.presets_owox_hits"]}, "config": {"enabled": true, "alias": "relationships_presets_owox_hit_146beb81203fc4d6498401a278f21ddb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_"], "unique_id": "test.snto_clickhouse.relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_.463a8e6f6d", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "relationships_presets_owox_hit_146beb81203fc4d6498401a278f21ddb.sql", "original_file_path": "models/presets/schema.yml", "name": "relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_", "alias": "relationships_presets_owox_hit_146beb81203fc4d6498401a278f21ddb", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_sessions"], ["presets_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/relationships_presets_owox_hit_146beb81203fc4d6498401a278f21ddb.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_presets_owox_hit_146beb81203fc4d6498401a278f21ddb"}, "created_at": 1651140246.8807063, "compiled_sql": "\n    \n    \n\nwith child as (\n    select sessionId as from_field\n    from analytics_prod.presets_owox_hits\n    where sessionId is not null\n),\n\nparent as (\n    select sessionId as to_field\n    from analytics_prod.presets_owox_sessions\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\nsettings join_use_nulls = 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.presets_owox_hits"}, "test.snto_clickhouse.not_null_presets_owox_hits_hitId.3a0b334600": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('presets_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_hits_hitId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_hits_hitId.3a0b334600", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_hits_hitId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_hits_hitId", "alias": "not_null_presets_owox_hits_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_hits_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.8912203, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_hits\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.presets_owox_hits"}, "test.snto_clickhouse.unique_presets_owox_hits_hitId.c7b93ea6ec": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('presets_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "unique_presets_owox_hits_hitId"], "unique_id": "test.snto_clickhouse.unique_presets_owox_hits_hitId.c7b93ea6ec", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_presets_owox_hits_hitId.sql", "original_file_path": "models/presets/schema.yml", "name": "unique_presets_owox_hits_hitId", "alias": "unique_presets_owox_hits_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/unique_presets_owox_hits_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.8933005, "compiled_sql": "\n    \n    \n\nselect\n    hitId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.presets_owox_hits\nwhere hitId is not null\ngroup by hitId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.presets_owox_hits"}, "test.snto_clickhouse.not_null_presets_owox_sessions_clientId.9606f4a02a": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('presets_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_sessions_clientId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_sessions_clientId.9606f4a02a", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_sessions_clientId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_sessions_clientId", "alias": "not_null_presets_owox_sessions_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_sessions_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.8949213, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_sessions\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.presets_owox_sessions"}, "test.snto_clickhouse.not_null_presets_owox_sessions_sessionId.809a58b5d1": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('presets_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_sessions_sessionId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_sessions_sessionId.809a58b5d1", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_sessions_sessionId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_sessions_sessionId", "alias": "not_null_presets_owox_sessions_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_sessions_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.8967898, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_sessions\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.presets_owox_sessions"}, "test.snto_clickhouse.unique_presets_owox_sessions_sessionId.e8798c65e0": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('presets_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "unique_presets_owox_sessions_sessionId"], "unique_id": "test.snto_clickhouse.unique_presets_owox_sessions_sessionId.e8798c65e0", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_presets_owox_sessions_sessionId.sql", "original_file_path": "models/presets/schema.yml", "name": "unique_presets_owox_sessions_sessionId", "alias": "unique_presets_owox_sessions_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/unique_presets_owox_sessions_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.8986113, "compiled_sql": "\n    \n    \n\nselect\n    sessionId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.presets_owox_sessions\nwhere sessionId is not null\ngroup by sessionId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.presets_owox_sessions"}, "test.snto_clickhouse.relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_.bc3ab5248a": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_presets_owox_ses_7a1c3a65c17213489a196951faa049ef\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('presets_owox_hits')", "field": "sessionId", "column_name": "sessionId", "model": "{{ get_where_subquery(ref('presets_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_hits", "model.snto_clickhouse.presets_owox_sessions"]}, "config": {"enabled": true, "alias": "relationships_presets_owox_ses_7a1c3a65c17213489a196951faa049ef", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_"], "unique_id": "test.snto_clickhouse.relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_.bc3ab5248a", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "relationships_presets_owox_ses_7a1c3a65c17213489a196951faa049ef.sql", "original_file_path": "models/presets/schema.yml", "name": "relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_", "alias": "relationships_presets_owox_ses_7a1c3a65c17213489a196951faa049ef", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_hits"], ["presets_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/relationships_presets_owox_ses_7a1c3a65c17213489a196951faa049ef.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_presets_owox_ses_7a1c3a65c17213489a196951faa049ef"}, "created_at": 1651140246.9005542, "compiled_sql": "\n    \n    \n\nwith child as (\n    select sessionId as from_field\n    from analytics_prod.presets_owox_sessions\n    where sessionId is not null\n),\n\nparent as (\n    select sessionId as to_field\n    from analytics_prod.presets_owox_hits\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\nsettings join_use_nulls = 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.presets_owox_sessions"}, "test.snto_clickhouse.not_null_presets_owox_sessions_visitNumber.a184635a02": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "visitNumber", "model": "{{ get_where_subquery(ref('presets_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_sessions_visitNumber"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_sessions_visitNumber.a184635a02", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_sessions_visitNumber.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_sessions_visitNumber", "alias": "not_null_presets_owox_sessions_visitNumber", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_sessions_visitNumber.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9066424, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_sessions\nwhere visitNumber is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "visitNumber", "file_key_name": "models.presets_owox_sessions"}, "test.snto_clickhouse.not_null_presets_owox_sessions_landingPage.1911b46c12": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "landingPage", "model": "{{ get_where_subquery(ref('presets_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_sessions_landingPage"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_sessions_landingPage.1911b46c12", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_sessions_landingPage.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_sessions_landingPage", "alias": "not_null_presets_owox_sessions_landingPage", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_sessions_landingPage.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9084978, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_sessions\nwhere landingPage is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "landingPage", "file_key_name": "models.presets_owox_sessions"}, "test.snto_clickhouse.not_null_presets_owox_promotions_clientId.e16ea71340": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('presets_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_promotions_clientId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_promotions_clientId.e16ea71340", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_promotions_clientId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_promotions_clientId", "alias": "not_null_presets_owox_promotions_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_promotions_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.910136, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_promotions\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.presets_owox_promotions"}, "test.snto_clickhouse.not_null_presets_owox_promotions_sessionId.73cef2bfe0": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('presets_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_promotions_sessionId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_promotions_sessionId.73cef2bfe0", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_promotions_sessionId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_promotions_sessionId", "alias": "not_null_presets_owox_promotions_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_promotions_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9117177, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_promotions\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.presets_owox_promotions"}, "test.snto_clickhouse.not_null_presets_owox_promotions_hitId.6f8692c99d": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('presets_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_promotions_hitId"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_promotions_hitId.6f8692c99d", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_promotions_hitId.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_promotions_hitId", "alias": "not_null_presets_owox_promotions_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_promotions_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9137805, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_promotions\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.presets_owox_promotions"}, "test.snto_clickhouse.not_null_presets_owox_promotions_promotionActionInfo.92956378d8": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "promotionActionInfo", "model": "{{ get_where_subquery(ref('presets_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.presets_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "presets", "not_null_presets_owox_promotions_promotionActionInfo"], "unique_id": "test.snto_clickhouse.not_null_presets_owox_promotions_promotionActionInfo.92956378d8", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_presets_owox_promotions_promotionActionInfo.sql", "original_file_path": "models/presets/schema.yml", "name": "not_null_presets_owox_promotions_promotionActionInfo", "alias": "not_null_presets_owox_promotions_promotionActionInfo", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["presets_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/presets/schema.yml/not_null_presets_owox_promotions_promotionActionInfo.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9155087, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.presets_owox_promotions\nwhere promotionActionInfo is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "promotionActionInfo", "file_key_name": "models.presets_owox_promotions"}, "test.snto_clickhouse.not_null_stg_owox_hits_clientId.baadb94f3a": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('stg_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_hits_clientId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_hits_clientId.baadb94f3a", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_hits_clientId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_hits_clientId", "alias": "not_null_stg_owox_hits_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_hits_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9917614, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_hits\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.stg_owox_hits"}, "test.snto_clickhouse.not_null_stg_owox_hits_sessionId.d7a71afd3e": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_hits_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_hits_sessionId.d7a71afd3e", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_hits_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_hits_sessionId", "alias": "not_null_stg_owox_hits_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_hits_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9940991, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_hits\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_hits"}, "test.snto_clickhouse.not_null_stg_owox_hits_hitId.abf9681516": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_hits_hitId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_hits_hitId.abf9681516", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_hits_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_hits_hitId", "alias": "not_null_stg_owox_hits_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_hits_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.995982, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_hits\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_hits"}, "test.snto_clickhouse.unique_stg_owox_hits_hitId.21ecf387b6": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "unique_stg_owox_hits_hitId"], "unique_id": "test.snto_clickhouse.unique_stg_owox_hits_hitId.21ecf387b6", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_stg_owox_hits_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_owox_hits_hitId", "alias": "unique_stg_owox_hits_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/unique_stg_owox_hits_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140246.9978464, "compiled_sql": "\n    \n    \n\nselect\n    hitId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.stg_owox_hits\nwhere hitId is not null\ngroup by hitId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_hits"}, "test.snto_clickhouse.not_null_stg_owox_hits_hitTimestamp.4b8d5b1670": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitTimestamp", "model": "{{ get_where_subquery(ref('stg_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_hits_hitTimestamp"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_hits_hitTimestamp.4b8d5b1670", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_hits_hitTimestamp.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_hits_hitTimestamp", "alias": "not_null_stg_owox_hits_hitTimestamp", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_hits_hitTimestamp.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.038178, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_hits\nwhere hitTimestamp is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitTimestamp", "file_key_name": "models.stg_owox_hits"}, "test.snto_clickhouse.not_null_stg_owox_hits_pagePath.d0fc46a450": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "pagePath", "model": "{{ get_where_subquery(ref('stg_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_hits_pagePath"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_hits_pagePath.d0fc46a450", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_hits_pagePath.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_hits_pagePath", "alias": "not_null_stg_owox_hits_pagePath", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_hits_pagePath.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0401657, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_hits\nwhere pagePath is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "pagePath", "file_key_name": "models.stg_owox_hits"}, "test.snto_clickhouse.not_null_stg_owox_hits_pageUrl.19cc70d244": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "pageUrl", "model": "{{ get_where_subquery(ref('stg_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_hits_pageUrl"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_hits_pageUrl.19cc70d244", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_hits_pageUrl.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_hits_pageUrl", "alias": "not_null_stg_owox_hits_pageUrl", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_hits_pageUrl.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0420768, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_hits\nwhere pageUrl is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "pageUrl", "file_key_name": "models.stg_owox_hits"}, "test.snto_clickhouse.not_null_stg_owox_sessions_clientId.78af63a402": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('stg_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_sessions_clientId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_sessions_clientId.78af63a402", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_sessions_clientId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_sessions_clientId", "alias": "not_null_stg_owox_sessions_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_sessions_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.044329, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_sessions\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.stg_owox_sessions"}, "test.snto_clickhouse.not_null_stg_owox_sessions_sessionId.be8905249a": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_sessions_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_sessions_sessionId.be8905249a", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_sessions_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_sessions_sessionId", "alias": "not_null_stg_owox_sessions_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_sessions_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0462148, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_sessions\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_sessions"}, "test.snto_clickhouse.unique_stg_owox_sessions_sessionId.f173ce0df3": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "unique_stg_owox_sessions_sessionId"], "unique_id": "test.snto_clickhouse.unique_stg_owox_sessions_sessionId.f173ce0df3", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_stg_owox_sessions_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_owox_sessions_sessionId", "alias": "unique_stg_owox_sessions_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/unique_stg_owox_sessions_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0480564, "compiled_sql": "\n    \n    \n\nselect\n    sessionId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.stg_owox_sessions\nwhere sessionId is not null\ngroup by sessionId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_sessions"}, "test.snto_clickhouse.not_null_stg_owox_sessions_visitNumber.dd69192b9c": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "visitNumber", "model": "{{ get_where_subquery(ref('stg_owox_sessions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_sessions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_sessions_visitNumber"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_sessions_visitNumber.dd69192b9c", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_sessions_visitNumber.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_sessions_visitNumber", "alias": "not_null_stg_owox_sessions_visitNumber", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_sessions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_sessions_visitNumber.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.049965, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_sessions\nwhere visitNumber is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "visitNumber", "file_key_name": "models.stg_owox_sessions"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_clientId.a51fb3ff75": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_impressions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_impressions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_impressions_clientId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_clientId.a51fb3ff75", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_impressions_clientId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_impressions_clientId", "alias": "not_null_stg_owox_ecomm_impressions_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_impressions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_impressions_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0526006, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_impressions\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.stg_owox_ecomm_impressions"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_sessionId.56fec09aab": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_impressions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_impressions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_impressions_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_sessionId.56fec09aab", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_impressions_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_impressions_sessionId", "alias": "not_null_stg_owox_ecomm_impressions_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_impressions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_impressions_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0544825, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_impressions\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_ecomm_impressions"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_hitId.d0b72d5907": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_impressions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_impressions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_impressions_hitId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_hitId.d0b72d5907", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_impressions_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_impressions_hitId", "alias": "not_null_stg_owox_ecomm_impressions_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_impressions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_impressions_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0562782, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_impressions\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_ecomm_impressions"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_productSku.fe897d44bc": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "productSku", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_impressions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_impressions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_impressions_productSku"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_productSku.fe897d44bc", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_impressions_productSku.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_impressions_productSku", "alias": "not_null_stg_owox_ecomm_impressions_productSku", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_impressions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_impressions_productSku.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0582147, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_impressions\nwhere productSku is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "productSku", "file_key_name": "models.stg_owox_ecomm_impressions"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_clientId.713428598f": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_clicks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_clicks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_clicks_clientId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_clientId.713428598f", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_clicks_clientId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_clicks_clientId", "alias": "not_null_stg_owox_ecomm_clicks_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_clicks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_clicks_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0602982, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_clicks\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.stg_owox_ecomm_clicks"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_sessionId.3d24e2dd10": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_clicks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_clicks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_clicks_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_sessionId.3d24e2dd10", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_clicks_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_clicks_sessionId", "alias": "not_null_stg_owox_ecomm_clicks_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_clicks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_clicks_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0620277, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_clicks\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_ecomm_clicks"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_hitId.7078d0a5b2": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_clicks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_clicks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_clicks_hitId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_hitId.7078d0a5b2", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_clicks_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_clicks_hitId", "alias": "not_null_stg_owox_ecomm_clicks_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_clicks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_clicks_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0636888, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_clicks\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_ecomm_clicks"}, "test.snto_clickhouse.unique_stg_owox_ecomm_clicks_hitId.fbe33b2967": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_clicks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_clicks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "unique_stg_owox_ecomm_clicks_hitId"], "unique_id": "test.snto_clickhouse.unique_stg_owox_ecomm_clicks_hitId.fbe33b2967", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_stg_owox_ecomm_clicks_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_owox_ecomm_clicks_hitId", "alias": "unique_stg_owox_ecomm_clicks_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_clicks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/unique_stg_owox_ecomm_clicks_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0654082, "compiled_sql": "\n    \n    \n\nselect\n    hitId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.stg_owox_ecomm_clicks\nwhere hitId is not null\ngroup by hitId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_ecomm_clicks"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_productSku.65ab65d6d9": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "productSku", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_clicks')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_clicks"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_clicks_productSku"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_productSku.65ab65d6d9", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_clicks_productSku.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_clicks_productSku", "alias": "not_null_stg_owox_ecomm_clicks_productSku", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_clicks"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_clicks_productSku.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0673487, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_clicks\nwhere productSku is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "productSku", "file_key_name": "models.stg_owox_ecomm_clicks"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_clientId.9ef0c0d140": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_adds')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_adds"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_adds_clientId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_clientId.9ef0c0d140", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_adds_clientId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_adds_clientId", "alias": "not_null_stg_owox_ecomm_adds_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_adds"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_adds_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0697806, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_adds\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.stg_owox_ecomm_adds"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_sessionId.0d32bcf095": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_adds')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_adds"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_adds_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_sessionId.0d32bcf095", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_adds_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_adds_sessionId", "alias": "not_null_stg_owox_ecomm_adds_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_adds"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_adds_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0714686, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_adds\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_ecomm_adds"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_hitId.6feac71b12": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_adds')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_adds"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_adds_hitId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_hitId.6feac71b12", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_adds_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_adds_hitId", "alias": "not_null_stg_owox_ecomm_adds_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_adds"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_adds_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0732467, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_adds\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_ecomm_adds"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_productSku.0bb5e7e63a": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "productSku", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_adds')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_adds"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_adds_productSku"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_productSku.0bb5e7e63a", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_adds_productSku.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_adds_productSku", "alias": "not_null_stg_owox_ecomm_adds_productSku", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_adds"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_adds_productSku.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0751982, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_adds\nwhere productSku is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "productSku", "file_key_name": "models.stg_owox_ecomm_adds"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_clientId.c93ffa9526": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_purchase')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_purchase"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_purchase_clientId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_clientId.c93ffa9526", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_purchase_clientId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_purchase_clientId", "alias": "not_null_stg_owox_ecomm_purchase_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_purchase"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_purchase_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0771875, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_purchase\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.stg_owox_ecomm_purchase"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_sessionId.0376744981": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_purchase')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_purchase"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_purchase_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_sessionId.0376744981", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_purchase_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_purchase_sessionId", "alias": "not_null_stg_owox_ecomm_purchase_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_purchase"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_purchase_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.078898, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_purchase\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_ecomm_purchase"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_hitId.9406a5a810": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_purchase')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_purchase"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_purchase_hitId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_hitId.9406a5a810", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_purchase_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_purchase_hitId", "alias": "not_null_stg_owox_ecomm_purchase_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_purchase"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_purchase_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.080517, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_purchase\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_ecomm_purchase"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_productSku.2513141ee5": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "productSku", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_purchase')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_purchase"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_purchase_productSku"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_productSku.2513141ee5", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_purchase_productSku.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_purchase_productSku", "alias": "not_null_stg_owox_ecomm_purchase_productSku", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_purchase"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_purchase_productSku.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0823715, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_purchase\nwhere productSku is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "productSku", "file_key_name": "models.stg_owox_ecomm_purchase"}, "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_transactionId.eedac369dc": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "transactionId", "model": "{{ get_where_subquery(ref('stg_owox_ecomm_purchase')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_ecomm_purchase"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_ecomm_purchase_transactionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_transactionId.eedac369dc", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_ecomm_purchase_transactionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_ecomm_purchase_transactionId", "alias": "not_null_stg_owox_ecomm_purchase_transactionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_ecomm_purchase"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_ecomm_purchase_transactionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.084072, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_ecomm_purchase\nwhere transactionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "transactionId", "file_key_name": "models.stg_owox_ecomm_purchase"}, "test.snto_clickhouse.not_null_stg_owox_promotions_clientId.34fb284f38": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('stg_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_promotions_clientId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_promotions_clientId.34fb284f38", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_promotions_clientId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_promotions_clientId", "alias": "not_null_stg_owox_promotions_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_promotions_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0862515, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_promotions\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.stg_owox_promotions"}, "test.snto_clickhouse.not_null_stg_owox_promotions_sessionId.6edffbc71c": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_promotions_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_promotions_sessionId.6edffbc71c", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_promotions_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_promotions_sessionId", "alias": "not_null_stg_owox_promotions_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_promotions_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0884337, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_promotions\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_owox_promotions"}, "test.snto_clickhouse.not_null_stg_owox_promotions_hitId.4e45c78373": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('stg_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_promotions_hitId"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_promotions_hitId.4e45c78373", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_promotions_hitId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_promotions_hitId", "alias": "not_null_stg_owox_promotions_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_promotions_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0902746, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_promotions\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.stg_owox_promotions"}, "test.snto_clickhouse.not_null_stg_owox_promotions_promotionActionInfo.bc99da9007": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "promotionActionInfo", "model": "{{ get_where_subquery(ref('stg_owox_promotions')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_owox_promotions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_owox_promotions_promotionActionInfo"], "unique_id": "test.snto_clickhouse.not_null_stg_owox_promotions_promotionActionInfo.bc99da9007", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_owox_promotions_promotionActionInfo.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_owox_promotions_promotionActionInfo", "alias": "not_null_stg_owox_promotions_promotionActionInfo", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_owox_promotions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_owox_promotions_promotionActionInfo.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.091898, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_owox_promotions\nwhere promotionActionInfo is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "promotionActionInfo", "file_key_name": "models.stg_owox_promotions"}, "test.snto_clickhouse.not_null_stg_bots_sessionId.ad39fa0477": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_bots')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_bots"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_bots_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_bots_sessionId.ad39fa0477", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_bots_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_bots_sessionId", "alias": "not_null_stg_bots_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_bots"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_bots_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0935113, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_bots\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_bots"}, "test.snto_clickhouse.unique_stg_bots_sessionId.06a2e761b8": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_bots')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_bots"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "unique_stg_bots_sessionId"], "unique_id": "test.snto_clickhouse.unique_stg_bots_sessionId.06a2e761b8", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_stg_bots_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_bots_sessionId", "alias": "unique_stg_bots_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_bots"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/unique_stg_bots_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0953574, "compiled_sql": "\n    \n    \n\nselect\n    sessionId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.stg_bots\nwhere sessionId is not null\ngroup by sessionId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_bots"}, "test.snto_clickhouse.not_null_stg_robots_sessionId.12f1029567": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_robots')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_robots"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_robots_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_robots_sessionId.12f1029567", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_robots_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_robots_sessionId", "alias": "not_null_stg_robots_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_robots"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_robots_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0973241, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_robots\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_robots"}, "test.snto_clickhouse.unique_stg_robots_sessionId.135c96f7e7": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_robots')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_robots"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "unique_stg_robots_sessionId"], "unique_id": "test.snto_clickhouse.unique_stg_robots_sessionId.135c96f7e7", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_stg_robots_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_robots_sessionId", "alias": "unique_stg_robots_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_robots"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/unique_stg_robots_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.0989025, "compiled_sql": "\n    \n    \n\nselect\n    sessionId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.stg_robots\nwhere sessionId is not null\ngroup by sessionId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_robots"}, "test.snto_clickhouse.not_null_stg_santon_sessionId.bb01dce8e5": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_santon')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_santon"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "not_null_stg_santon_sessionId"], "unique_id": "test.snto_clickhouse.not_null_stg_santon_sessionId.bb01dce8e5", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_stg_santon_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_santon_sessionId", "alias": "not_null_stg_santon_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_santon"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/not_null_stg_santon_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1004798, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.stg_santon\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_santon"}, "test.snto_clickhouse.unique_stg_santon_sessionId.769a12dba6": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('stg_santon')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.stg_santon"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "staging", "unique_stg_santon_sessionId"], "unique_id": "test.snto_clickhouse.unique_stg_santon_sessionId.769a12dba6", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_stg_santon_sessionId.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_santon_sessionId", "alias": "unique_stg_santon_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_santon"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/staging/schema.yml/unique_stg_santon_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1024222, "compiled_sql": "\n    \n    \n\nselect\n    sessionId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.stg_santon\nwhere sessionId is not null\ngroup by sessionId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.stg_santon"}, "test.snto_clickhouse.not_null_pre_filters_sessionId.3fa2be077d": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('pre_filters')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "prepare", "not_null_pre_filters_sessionId"], "unique_id": "test.snto_clickhouse.not_null_pre_filters_sessionId.3fa2be077d", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_pre_filters_sessionId.sql", "original_file_path": "models/prepare/schema.yml", "name": "not_null_pre_filters_sessionId", "alias": "not_null_pre_filters_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["pre_filters"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/prepare/schema.yml/not_null_pre_filters_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1129055, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.pre_filters\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.pre_filters"}, "test.snto_clickhouse.unique_pre_filters_sessionId.d7ee5d9285": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('pre_filters')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.pre_filters"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "prepare", "unique_pre_filters_sessionId"], "unique_id": "test.snto_clickhouse.unique_pre_filters_sessionId.d7ee5d9285", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_pre_filters_sessionId.sql", "original_file_path": "models/prepare/schema.yml", "name": "unique_pre_filters_sessionId", "alias": "unique_pre_filters_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["pre_filters"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/prepare/schema.yml/unique_pre_filters_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1146154, "compiled_sql": "\n    \n    \n\nselect\n    sessionId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.pre_filters\nwhere sessionId is not null\ngroup by sessionId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.pre_filters"}, "test.snto_clickhouse.not_null_pre_owox_hits_clientId.c34fa82e21": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "clientId", "model": "{{ get_where_subquery(ref('pre_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.pre_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "prepare", "not_null_pre_owox_hits_clientId"], "unique_id": "test.snto_clickhouse.not_null_pre_owox_hits_clientId.c34fa82e21", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_pre_owox_hits_clientId.sql", "original_file_path": "models/prepare/schema.yml", "name": "not_null_pre_owox_hits_clientId", "alias": "not_null_pre_owox_hits_clientId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["pre_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/prepare/schema.yml/not_null_pre_owox_hits_clientId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1165345, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.pre_owox_hits\nwhere clientId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "clientId", "file_key_name": "models.pre_owox_hits"}, "test.snto_clickhouse.not_null_pre_owox_hits_sessionId.1880cff365": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sessionId", "model": "{{ get_where_subquery(ref('pre_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.pre_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "prepare", "not_null_pre_owox_hits_sessionId"], "unique_id": "test.snto_clickhouse.not_null_pre_owox_hits_sessionId.1880cff365", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_pre_owox_hits_sessionId.sql", "original_file_path": "models/prepare/schema.yml", "name": "not_null_pre_owox_hits_sessionId", "alias": "not_null_pre_owox_hits_sessionId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["pre_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/prepare/schema.yml/not_null_pre_owox_hits_sessionId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1187453, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.pre_owox_hits\nwhere sessionId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sessionId", "file_key_name": "models.pre_owox_hits"}, "test.snto_clickhouse.not_null_pre_owox_hits_hitId.5a2b48ee20": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('pre_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.pre_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "prepare", "not_null_pre_owox_hits_hitId"], "unique_id": "test.snto_clickhouse.not_null_pre_owox_hits_hitId.5a2b48ee20", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "not_null_pre_owox_hits_hitId.sql", "original_file_path": "models/prepare/schema.yml", "name": "not_null_pre_owox_hits_hitId", "alias": "not_null_pre_owox_hits_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["pre_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/prepare/schema.yml/not_null_pre_owox_hits_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1207345, "compiled_sql": "\n    \n    \n\nselect *\nfrom analytics_prod.pre_owox_hits\nwhere hitId is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.pre_owox_hits"}, "test.snto_clickhouse.unique_pre_owox_hits_hitId.3d63a77736": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "hitId", "model": "{{ get_where_subquery(ref('pre_owox_hits')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.snto_clickhouse.pre_owox_hits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "prepare", "unique_pre_owox_hits_hitId"], "unique_id": "test.snto_clickhouse.unique_pre_owox_hits_hitId.3d63a77736", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "unique_pre_owox_hits_hitId.sql", "original_file_path": "models/prepare/schema.yml", "name": "unique_pre_owox_hits_hitId", "alias": "unique_pre_owox_hits_hitId", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["pre_owox_hits"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/prepare/schema.yml/unique_pre_owox_hits_hitId.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.122288, "compiled_sql": "\n    \n    \n\nselect\n    hitId as unique_field,\n    count(*) as n_records\n\nfrom analytics_prod.pre_owox_hits\nwhere hitId is not null\ngroup by hitId\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "hitId", "file_key_name": "models.pre_owox_hits"}, "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_source.49f25ef944": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "source", "model": "{{ get_where_subquery(source('dwh_site', 'src_cost_data')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["source.snto_clickhouse.dwh_site.src_cost_data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "source_not_null_dwh_site_src_cost_data_source"], "unique_id": "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_source.49f25ef944", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "source_not_null_dwh_site_src_cost_data_source.sql", "original_file_path": "models/sources.yml", "name": "source_not_null_dwh_site_src_cost_data_source", "alias": "source_not_null_dwh_site_src_cost_data_source", "checksum": {"name": "none", "checksum": ""}, "tags": ["src"], "refs": [], "sources": [["dwh_site", "src_cost_data"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/sources.yml/source_not_null_dwh_site_src_cost_data_source.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.131831, "compiled_sql": "\n    \n    \n\nselect *\nfrom dwh_site.CostData\nwhere source is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "source", "file_key_name": "sources.dwh_site"}, "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_medium.5a7578660b": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "medium", "model": "{{ get_where_subquery(source('dwh_site', 'src_cost_data')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["source.snto_clickhouse.dwh_site.src_cost_data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "source_not_null_dwh_site_src_cost_data_medium"], "unique_id": "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_medium.5a7578660b", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "source_not_null_dwh_site_src_cost_data_medium.sql", "original_file_path": "models/sources.yml", "name": "source_not_null_dwh_site_src_cost_data_medium", "alias": "source_not_null_dwh_site_src_cost_data_medium", "checksum": {"name": "none", "checksum": ""}, "tags": ["src"], "refs": [], "sources": [["dwh_site", "src_cost_data"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/sources.yml/source_not_null_dwh_site_src_cost_data_medium.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1334696, "compiled_sql": "\n    \n    \n\nselect *\nfrom dwh_site.CostData\nwhere medium is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "medium", "file_key_name": "sources.dwh_site"}, "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_campaign.e032cba5b7": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "campaign", "model": "{{ get_where_subquery(source('dwh_site', 'src_cost_data')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["source.snto_clickhouse.dwh_site.src_cost_data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "source_not_null_dwh_site_src_cost_data_campaign"], "unique_id": "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_campaign.e032cba5b7", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "source_not_null_dwh_site_src_cost_data_campaign.sql", "original_file_path": "models/sources.yml", "name": "source_not_null_dwh_site_src_cost_data_campaign", "alias": "source_not_null_dwh_site_src_cost_data_campaign", "checksum": {"name": "none", "checksum": ""}, "tags": ["src"], "refs": [], "sources": [["dwh_site", "src_cost_data"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/sources.yml/source_not_null_dwh_site_src_cost_data_campaign.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.136081, "compiled_sql": "\n    \n    \n\nselect *\nfrom dwh_site.CostData\nwhere campaign is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "campaign", "file_key_name": "sources.dwh_site"}, "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_keyword.66e835a218": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "keyword", "model": "{{ get_where_subquery(source('dwh_site', 'src_cost_data')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["source.snto_clickhouse.dwh_site.src_cost_data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "source_not_null_dwh_site_src_cost_data_keyword"], "unique_id": "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_keyword.66e835a218", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "source_not_null_dwh_site_src_cost_data_keyword.sql", "original_file_path": "models/sources.yml", "name": "source_not_null_dwh_site_src_cost_data_keyword", "alias": "source_not_null_dwh_site_src_cost_data_keyword", "checksum": {"name": "none", "checksum": ""}, "tags": ["src"], "refs": [], "sources": [["dwh_site", "src_cost_data"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/sources.yml/source_not_null_dwh_site_src_cost_data_keyword.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1383207, "compiled_sql": "\n    \n    \n\nselect *\nfrom dwh_site.CostData\nwhere keyword is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "keyword", "file_key_name": "sources.dwh_site"}, "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_adContent.2268d27ebc": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "adContent", "model": "{{ get_where_subquery(source('dwh_site', 'src_cost_data')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["source.snto_clickhouse.dwh_site.src_cost_data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": null, "schema": "analytics_prod_dbt_test__audit", "fqn": ["snto_clickhouse", "source_not_null_dwh_site_src_cost_data_adContent"], "unique_id": "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_adContent.2268d27ebc", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "source_not_null_dwh_site_src_cost_data_adContent.sql", "original_file_path": "models/sources.yml", "name": "source_not_null_dwh_site_src_cost_data_adContent", "alias": "source_not_null_dwh_site_src_cost_data_adContent", "checksum": {"name": "none", "checksum": ""}, "tags": ["src"], "refs": [], "sources": [["dwh_site", "src_cost_data"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/snto_clickhouse/models/sources.yml/source_not_null_dwh_site_src_cost_data_adContent.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1651140247.1405516, "compiled_sql": "\n    \n    \n\nselect *\nfrom dwh_site.CostData\nwhere adContent is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "adContent", "file_key_name": "sources.dwh_site"}}, "sources": {"source.snto_clickhouse.dwh_site.src_cost_data": {"fqn": ["snto_clickhouse", "dwh_site", "src_cost_data"], "database": null, "schema": "dwh_site", "unique_id": "source.snto_clickhouse.dwh_site.src_cost_data", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "src_cost_data", "source_name": "dwh_site", "source_description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0441\u0430\u0439\u0442\u0443", "loader": "", "identifier": "CostData", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u044b\u043c \u0440\u0430\u0441\u0445\u043e\u0434\u0430\u043c, \u0432\u044b\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u0430\u044f \u0438\u0437 BigQuery \u043f\u043e \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0432 14:00", "columns": {"source": {"name": "source", "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_source", "meta": {}, "data_type": null, "quote": null, "tags": []}, "medium": {"name": "medium", "description": "\u041a\u0430\u043d\u0430\u043b \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_medium", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaign": {"name": "campaign", "description": "\u0420\u0435\u043a\u043b\u0430\u043c\u043d\u0430\u044f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u044f. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_campaign", "meta": {}, "data_type": null, "quote": null, "tags": []}, "keyword": {"name": "keyword", "description": "\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_keyword", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adContent": {"name": "adContent", "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044f. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u0432 get-\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 utm_content", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adGroup": {"name": "adGroup", "description": "\u0413\u0440\u0443\u043f\u043f\u0430 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0432\u0438\u0437\u0438\u0442\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adCost": {"name": "adCost", "description": "\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u0437\u0430 \u0434\u0435\u043d\u044c.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "impressions": {"name": "impressions", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043a\u0430\u0437\u043e\u0432 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u044b\u0445 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adClicks": {"name": "adClicks", "description": "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043b\u0438\u043a\u043e\u0432 \u043f\u043e \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u044e.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adAccount": {"name": "adAccount", "description": "\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u043c \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "dataSource": {"name": "dataSource", "description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 CostData_", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaignType": {"name": "campaignType", "description": "\u0422\u0438\u043f \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445. \u0421\u043c. \u0434\u043e\u043a\u0443", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaignId": {"name": "campaignId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0439 \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "campaignName": {"name": "campaignName", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0439 \u043a\u0430\u043c\u043f\u0430\u043d\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adGroupId": {"name": "adGroupId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adGroupName": {"name": "adGroupName", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u044b \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "adSource": {"name": "adSource", "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043a\u043b\u0430\u043c\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0438\u0441\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["src"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "dwh_site.CostData", "created_at": 1651140247.1420162}, "source.snto_clickhouse.dwh_site.src_owox_sessions": {"fqn": ["snto_clickhouse", "dwh_site", "src_owox_sessions"], "database": null, "schema": "dwh_site", "unique_id": "source.snto_clickhouse.dwh_site.src_owox_sessions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "src_owox_sessions", "source_name": "dwh_site", "source_description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0441\u0430\u0439\u0442\u0443", "loader": "", "identifier": "owoxbi_sessions", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0441\u044b\u0440\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e \u0441\u0430\u0439\u0442\u0443, \u0432\u044b\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u0430\u044f \u0438\u0437 BigQuery \u043f\u043e \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044e \u0432 15:00", "columns": {"user": {"name": "user", "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c", "meta": {}, "data_type": null, "quote": null, "tags": []}, "clientId": {"name": "clientId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date": {"name": "date", "description": "\u0414\u0430\u0442\u0430 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435", "meta": {}, "data_type": null, "quote": null, "tags": []}, "sessionId": {"name": "sessionId", "description": "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "visitNumber": {"name": "visitNumber", "description": "\u041d\u043e\u043c\u0435\u0440 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 180 \u0434\u043d\u0435\u0439.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "newVisits": {"name": "newVisits", "description": "\u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u0441\u0435\u0441\u0441\u0438\u044f \u043f\u0435\u0440\u0432\u043e\u0439, \u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - \u043d\u043e\u0432\u044b\u043c. 1 - \u043f\u0435\u0440\u0432\u0430\u044f \u0441\u0435\u0441\u0441\u0438\u044f, 0 - \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u0430\u044f \u0441\u0435\u0441\u0441\u0438\u044f.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "landingPage": {"name": "landingPage", "description": "\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0432\u0445\u043e\u0434\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442, \u0441 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0430\u0447\u0430\u043b \u0441\u0432\u043e\u044e \u0441\u0435\u0441\u0441\u0438\u044e", "meta": {}, "data_type": null, "quote": null, "tags": []}, "device": {"name": "device", "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geoNetwork": {"name": "geoNetwork", "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0433\u0435\u043e\u043b\u043e\u043a\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}, "trafficSource": {"name": "trafficSource", "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0442\u0440\u0430\u0444\u0438\u043a\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "totals": {"name": "totals", "description": "\u0421\u0443\u043c\u043c\u0430\u0440\u043d\u044b\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0441\u0435\u0441\u0441\u0438\u0438", "meta": {}, "data_type": null, "quote": null, "tags": []}, "totalsStreaming": {"name": "totalsStreaming", "description": "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0441\u0442\u0440\u0438\u043c\u0438\u043d\u0433\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "customDimensions": {"name": "customDimensions", "description": "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b", "meta": {}, "data_type": null, "quote": null, "tags": []}, "hits": {"name": "hits", "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0445\u0438\u0442\u0430\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["src"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "dwh_site.owoxbi_sessions", "created_at": 1651140247.1422458}, "source.snto_clickhouse.dwh_business.src_order_details": {"fqn": ["snto_clickhouse", "dwh_business", "src_order_details"], "database": null, "schema": "dwh_business", "unique_id": "source.snto_clickhouse.dwh_business.src_order_details", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "models/sources.yml", "original_file_path": "models/sources.yml", "name": "src_order_details", "source_name": "dwh_business", "source_description": "\u0418\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 1\u0421", "loader": "", "identifier": "Order_Details", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e \u0437\u0430\u043a\u0430\u0437\u0430\u043c \u0438\u0437 1\u0421", "columns": {"Order_Date_Create": {"name": "Order_Date_Create", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Distr": {"name": "Order_Date_Distr", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Last_Status_Date": {"name": "Order_Last_Status_Date", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_ID": {"name": "Order_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Initial_ID": {"name": "Order_Initial_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Region": {"name": "Region", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "City": {"name": "City", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Address": {"name": "Address", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_ID": {"name": "SKU_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU": {"name": "SKU", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Group": {"name": "SKU_Group", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Type": {"name": "SKU_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Customized": {"name": "SKU_Customized", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_PS": {"name": "SKU_PS", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_ID": {"name": "Client_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client": {"name": "Client", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Type": {"name": "Client_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Number": {"name": "Client_Number", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Number_Additional": {"name": "Client_Number_Additional", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Email": {"name": "Client_Email", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Service_Logistik_Free": {"name": "Service_Logistik_Free", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Service_Rise": {"name": "Service_Rise", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Corp": {"name": "Order_Corp", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Opt": {"name": "Order_Opt", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Center": {"name": "Logistics_Center", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Option": {"name": "Logistics_Option", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Prepayment_Required": {"name": "Prepayment_Required", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Payment_Type": {"name": "Payment_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Activity_Status": {"name": "Activity_Status", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Source": {"name": "Order_Source", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Dnis": {"name": "Dnis", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Manager": {"name": "Manager", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Responsible": {"name": "Responsible", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Middleman": {"name": "Middleman", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Operation_Type": {"name": "Operation_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Approval_Status": {"name": "Approval_Status", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Reason_Cancel": {"name": "Order_Reason_Cancel", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Discount_Reason": {"name": "Order_Discount_Reason", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Sum_without_Discount": {"name": "SKU_Sales_Sum_without_Discount", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Sum_with_Discount": {"name": "SKU_Sales_Sum_with_Discount", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Sales_Count": {"name": "SKU_Sales_Count", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Logistik_Sum": {"name": "Order_Logistik_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Rise_Sum": {"name": "Order_Rise_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Upload_Date": {"name": "Upload_Date", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Cost_Sum": {"name": "SKU_Cost_Sum", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Logistics": {"name": "Order_Date_Logistics", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Unit": {"name": "SKU_Unit", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Responsible_Cancel": {"name": "Order_Responsible_Cancel", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Gross_Profit": {"name": "SKU_Gross_Profit", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Brand": {"name": "SKU_Brand", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Promotion_Type": {"name": "SKU_Promotion_Type", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Promo": {"name": "Order_Promo", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Loyalty_Card": {"name": "Order_Loyalty_Card", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Action": {"name": "Order_Action", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_Artikul": {"name": "SKU_Artikul", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Nabor": {"name": "Nabor", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Nabor_Artikul": {"name": "Nabor_Artikul", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Document_GUID": {"name": "Document_GUID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PustayaKorzina": {"name": "PustayaKorzina", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "BroshennayaKorzina": {"name": "BroshennayaKorzina", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "TehnologicheskayaOtmena": {"name": "TehnologicheskayaOtmena", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_KontaktnoeLitso": {"name": "Client_KontaktnoeLitso", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_KontaktnoeLitso_ID": {"name": "Client_KontaktnoeLitso_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SessionID": {"name": "SessionID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "User_Session_ID": {"name": "User_Session_ID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "SKU_GUID": {"name": "SKU_GUID", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Logistics_Center_Source": {"name": "Logistics_Center_Source", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Client_Comment": {"name": "Client_Comment", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Date_Logistics_Calc": {"name": "Order_Date_Logistics_Calc", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "MarketingovayaAktivnost": {"name": "MarketingovayaAktivnost", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Company_Name": {"name": "Company_Name", "description": "\u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u0430", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Order_Source_Type": {"name": "Order_Source_Type", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": ["src"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "dwh_business.Order_Details", "created_at": 1651140247.1427994}}, "macros": {"macro.snto_clickhouse.docs_type": {"unique_id": "macro.snto_clickhouse.docs_type", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "macros/mcr_docs_type.sql", "original_file_path": "macros/mcr_docs_type.sql", "name": "docs_type", "macro_sql": "{% macro docs_type() %}\n    {%- if  target.name == \"dev\" -%}\n        true\n    {%- else -%}\n        false\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f show \u043d\u0430 true \u0438 false \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 target.name", "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://macros/macros.yml", "arguments": [], "created_at": 1651140247.1272006}, "macro.snto_clickhouse.materialized_type": {"unique_id": "macro.snto_clickhouse.materialized_type", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "macros/mcr_materialized_type.sql", "original_file_path": "macros/mcr_materialized_type.sql", "name": "materialized_type", "macro_sql": "{% macro materialized_type() %}\n    {%- if  target.name == \"dev\" -%}\n        table\n    {%- else -%}\n        incremental\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "\u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f materialized \u043d\u0430 table \u0438 incremental \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 target.name", "meta": {}, "docs": {"show": false}, "patch_path": "snto_clickhouse://macros/macros.yml", "arguments": [], "created_at": 1651140247.1287582}, "macro.dbt_clickhouse.clickhouse__get_catalog": {"unique_id": "macro.dbt_clickhouse.clickhouse__get_catalog", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "clickhouse__get_catalog", "macro_sql": "{% macro clickhouse__get_catalog(information_schema, schemas) -%}\n  {%- call statement('catalog', fetch_result=True) -%}\n    select\n      null as table_database,\n      columns.database as table_schema,\n      columns.table as table_name,\n      if(tables.engine not in ('MaterializedView', 'View'), 'table', 'view') as table_type,\n      null as table_comment,\n      columns.name as column_name,\n      columns.position as column_index,\n      columns.type as column_type,\n      null as column_comment,\n      null as table_owner\n    from system.columns as columns\n    join system.tables as tables on tables.database = columns.database and tables.name = columns.table\n    where database != 'system' and\n    (\n    {%- for schema in schemas -%}\n      columns.database = '{{ schema }}'\n      {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    )\n    order by columns.database, columns.table, columns.position;\n  {%- endcall -%}\n  {{ return(load_result('catalog').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1641695}, "macro.dbt_clickhouse.engine_clause": {"unique_id": "macro.dbt_clickhouse.engine_clause", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "engine_clause", "macro_sql": "{% macro engine_clause(label) %}\n  {%- set engine = config.get('engine', validator=validation.any[basestring]) -%}\n  {%- if engine is not none %}\n    {{ label }} = {{ engine }}\n  {%- else %}\n    {{ label }} = MergeTree()\n  {%- endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.17959}, "macro.dbt_clickhouse.partition_cols": {"unique_id": "macro.dbt_clickhouse.partition_cols", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "partition_cols", "macro_sql": "{% macro partition_cols(label) %}\n  {%- set cols = config.get('partition_by', validator=validation.any[list, basestring]) -%}\n  {%- if cols is not none %}\n    {%- if cols is string -%}\n      {%- set cols = [cols] -%}\n    {%- endif -%}\n    {{ label }} (\n    {%- for item in cols -%}\n      {{ item }}\n      {%- if not loop.last -%},{%- endif -%}\n    {%- endfor -%}\n    )\n  {%- endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1808178}, "macro.dbt_clickhouse.order_cols": {"unique_id": "macro.dbt_clickhouse.order_cols", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "order_cols", "macro_sql": "{% macro order_cols(label) %}\n  {%- set cols = config.get('order_by', validator=validation.any[list, basestring]) -%}\n  {%- set engine = config.get('engine', validator=validation.any[basestring]) -%}\n  {%- if cols is not none %}\n    {%- if cols is string -%}\n      {%- set cols = [cols] -%}\n    {%- endif -%}\n    {{ label }} (\n    {%- for item in cols -%}\n      {{ item }}\n      {%- if not loop.last -%},{%- endif -%}\n    {%- endfor -%}\n    )\n  {%- elif engine and engine.startswith('Distributed') -%}\n  {%- else %}\n    {{ label }} (tuple())\n  {%- endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.182538}, "macro.dbt_clickhouse.on_cluster_clause": {"unique_id": "macro.dbt_clickhouse.on_cluster_clause", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "on_cluster_clause", "macro_sql": "{% macro on_cluster_clause(label) %}\n  {% set on_cluster = adapter.get_clickhouse_cluster_name() %}\n  {%- if on_cluster is not none %}\n    {{ label }} {{ on_cluster }}\n  {%- endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1831536}, "macro.dbt_clickhouse.clickhouse__create_table_as": {"unique_id": "macro.dbt_clickhouse.clickhouse__create_table_as", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__create_table_as", "macro_sql": "{% macro clickhouse__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  {% if temporary -%}\n    create temporary table {{ relation.name }}\n    engine = Memory\n    {{ order_cols(label=\"order by\") }}\n    {{ partition_cols(label=\"partition by\") }}\n  {%- else %}\n    create table {{ relation.include(database=False) }}\n    {{ on_cluster_clause(label=\"on cluster\") }}\n    {{ engine_clause(label=\"engine\") }}\n    {{ order_cols(label=\"order by\") }}\n    {{ partition_cols(label=\"partition by\") }}\n  {%- endif %}\n  as (\n    {{ sql }}\n  )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.order_cols", "macro.dbt_clickhouse.partition_cols", "macro.dbt_clickhouse.on_cluster_clause", "macro.dbt_clickhouse.engine_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.184875}, "macro.dbt_clickhouse.clickhouse__create_view_as": {"unique_id": "macro.dbt_clickhouse.clickhouse__create_view_as", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__create_view_as", "macro_sql": "{% macro clickhouse__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create view {{ relation.include(database=False) }} {{ on_cluster_clause(label=\"on cluster\") }}\n  as (\n    {{ sql }}\n  )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.on_cluster_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1856759}, "macro.dbt_clickhouse.clickhouse__list_schemas": {"unique_id": "macro.dbt_clickhouse.clickhouse__list_schemas", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__list_schemas", "macro_sql": "{% macro clickhouse__list_schemas(database) %}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select name from system.databases\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1863115}, "macro.dbt_clickhouse.clickhouse__create_schema": {"unique_id": "macro.dbt_clickhouse.clickhouse__create_schema", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__create_schema", "macro_sql": "{% macro clickhouse__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create database if not exists {{ relation.without_identifier().include(database=False) }} {{ on_cluster_clause(label=\"on cluster\") }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_clickhouse.on_cluster_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1870627}, "macro.dbt_clickhouse.clickhouse__drop_schema": {"unique_id": "macro.dbt_clickhouse.clickhouse__drop_schema", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__drop_schema", "macro_sql": "{% macro clickhouse__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop database if exists {{ relation.without_identifier().include(database=False) }} {{ on_cluster_clause(label=\"on cluster\") }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_clickhouse.on_cluster_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1877782}, "macro.dbt_clickhouse.clickhouse__list_relations_without_caching": {"unique_id": "macro.dbt_clickhouse.clickhouse__list_relations_without_caching", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__list_relations_without_caching", "macro_sql": "{% macro clickhouse__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      null as db,\n      name as name,\n      database as schema,\n      if(engine not in ('MaterializedView', 'View'), 'table', 'view') as type\n    from system.tables as t\n    where schema = '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.188465}, "macro.dbt_clickhouse.clickhouse__get_columns_in_relation": {"unique_id": "macro.dbt_clickhouse.clickhouse__get_columns_in_relation", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__get_columns_in_relation", "macro_sql": "{% macro clickhouse__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n    select\n      name,\n      type,\n      position\n    from system.columns\n    where\n      table = '{{ relation.identifier }}'\n    {% if relation.schema %}\n      and database = '{{ relation.schema }}'\n    {% endif %}\n    order by position\n  {% endcall %}\n  {% do return(load_result('get_columns_in_relation').table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.189268}, "macro.dbt_clickhouse.clickhouse__drop_relation": {"unique_id": "macro.dbt_clickhouse.clickhouse__drop_relation", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__drop_relation", "macro_sql": "{% macro clickhouse__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop table if exists {{ relation }} {{ on_cluster_clause(label=\"on cluster\") }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_clickhouse.on_cluster_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1897256}, "macro.dbt_clickhouse.clickhouse__rename_relation": {"unique_id": "macro.dbt_clickhouse.clickhouse__rename_relation", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__rename_relation", "macro_sql": "{% macro clickhouse__rename_relation(from_relation, to_relation) -%}\n  {% call statement('drop_relation') %}\n    drop table if exists {{ to_relation }} {{ on_cluster_clause(label=\"on cluster\") }}\n  {% endcall %}\n  {% call statement('rename_relation') %}\n    rename table {{ from_relation }} to {{ to_relation }} {{ on_cluster_clause(label=\"on cluster\") }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_clickhouse.on_cluster_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1906025}, "macro.dbt_clickhouse.clickhouse__truncate_relation": {"unique_id": "macro.dbt_clickhouse.clickhouse__truncate_relation", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__truncate_relation", "macro_sql": "{% macro clickhouse__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1911159}, "macro.dbt_clickhouse.clickhouse__make_temp_relation": {"unique_id": "macro.dbt_clickhouse.clickhouse__make_temp_relation", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__make_temp_relation", "macro_sql": "{% macro clickhouse__make_temp_relation(base_relation, suffix) %}\n  {% set tmp_identifier = base_relation.identifier ~ suffix %}\n  {% set tmp_relation = base_relation.incorporate(\n                              path={\"identifier\": tmp_identifier, \"schema\": None}) -%}\n  {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1919694}, "macro.dbt_clickhouse.clickhouse__generate_database_name": {"unique_id": "macro.dbt_clickhouse.clickhouse__generate_database_name", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__generate_database_name", "macro_sql": "{% macro clickhouse__generate_database_name(custom_database_name=none, node=none) -%}\n  {% do return(None) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1923735}, "macro.dbt_clickhouse.clickhouse__current_timestamp": {"unique_id": "macro.dbt_clickhouse.clickhouse__current_timestamp", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__current_timestamp", "macro_sql": "{% macro clickhouse__current_timestamp() -%}\n  now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1925702}, "macro.dbt_clickhouse.clickhouse__get_columns_in_query": {"unique_id": "macro.dbt_clickhouse.clickhouse__get_columns_in_query", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__get_columns_in_query", "macro_sql": "{% macro clickhouse__get_columns_in_query(select_sql) %}\n  {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    limit 0\n  {% endcall %}\n\n  {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1933546}, "macro.dbt_clickhouse.clickhouse__alter_column_type": {"unique_id": "macro.dbt_clickhouse.clickhouse__alter_column_type", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "clickhouse__alter_column_type", "macro_sql": "{% macro clickhouse__alter_column_type(relation, column_name, new_column_type) -%}\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} {{ on_cluster_clause(label=\"on cluster\") }} modify column {{ adapter.quote(column_name) }} {{ new_column_type }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_clickhouse.on_cluster_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1940649}, "macro.dbt_clickhouse.clickhouse__load_csv_rows": {"unique_id": "macro.dbt_clickhouse.clickhouse__load_csv_rows", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "clickhouse__load_csv_rows", "macro_sql": "{% macro clickhouse__load_csv_rows(model, agate_table) %}\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set data_sql = adapter.get_csv_data(agate_table) %}\n\n  {% set sql -%}\n      insert into {{ this.render() }} ({{ cols_sql }}) format CSV\n      {{ data_sql }}\n  {%- endset %}\n\n  {% do adapter.add_query(sql, bindings=agate_table, abridge_sql_log=True) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1965241}, "macro.dbt_clickhouse.clickhouse__create_csv_table": {"unique_id": "macro.dbt_clickhouse.clickhouse__create_csv_table", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "name": "clickhouse__create_csv_table", "macro_sql": "{% macro clickhouse__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n      {%- for col_name in agate_table.column_names -%}\n        {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n        {%- set type = column_override.get(col_name, inferred_type) -%}\n        {%- set column_name = (col_name | string) -%}\n          {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n      {%- endfor -%}\n    )\n    {{ engine_clause(label='engine') }}\n    {{ order_cols(label='order by') }}\n    {{ partition_cols(label='partition by') }}\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.engine_clause", "macro.dbt_clickhouse.order_cols", "macro.dbt_clickhouse.partition_cols", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.1989746}, "macro.dbt_clickhouse.clickhouse__get_test_sql": {"unique_id": "macro.dbt_clickhouse.clickhouse__get_test_sql", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "clickhouse__get_test_sql", "macro_sql": "{% macro clickhouse__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      case when {{ fail_calc }} {{ warn_if }}\n        then 'true' else 'false' end as should_warn,\n      case when {{ fail_calc }} {{ error_if }}\n        then 'true' else 'false' end as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) as dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2004304}, "macro.dbt_clickhouse.materialization_incremental_clickhouse": {"unique_id": "macro.dbt_clickhouse.materialization_incremental_clickhouse", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "materialization_incremental_clickhouse", "macro_sql": "{% materialization incremental, adapter='clickhouse' -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set old_identifier = model['name'] + '__dbt_old' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% set old_relation = existing_relation.incorporate(path={\"identifier\": old_identifier}) %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% if on_schema_change != 'ignore' %}\n      {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n      {% do process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% endif %}\n\n    {%- if unique_key is not none -%}\n      {% do adapter.drop_relation(old_relation) %}\n      {% do adapter.rename_relation(target_relation, old_relation) %} \n\n      {% set create_sql = clickhouse__incremental_create(old_relation, target_relation) %}\n      {% call statement('main') %}\n        {{ create_sql }}\n      {% endcall %}\n\n      {% set currect_insert_sql = clickhouse__incremental_cur_insert(old_relation, tmp_relation, target_relation, unique_key=unique_key) %}\n      {% call statement('main') %}\n        {{ currect_insert_sql }}\n      {% endcall %}\n      {% do to_drop.append(old_relation) %}\n    {%- endif %}\n    \n    {% set build_sql = clickhouse__incremental_insert(tmp_relation, target_relation, unique_key=unique_key) %}\n    \n  {% endif %}\n\n  {% call statement('main') %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt_clickhouse.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_clickhouse.process_schema_changes", "macro.dbt_clickhouse.clickhouse__incremental_create", "macro.dbt.statement", "macro.dbt_clickhouse.clickhouse__incremental_cur_insert", "macro.dbt_clickhouse.clickhouse__incremental_insert", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2187402}, "macro.dbt_clickhouse.clickhouse__incremental_create": {"unique_id": "macro.dbt_clickhouse.clickhouse__incremental_create", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "clickhouse__incremental_create", "macro_sql": "{% macro clickhouse__incremental_create(old_relation, target_relation) %}\n  create table {{ target_relation }} as {{ old_relation }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.219199}, "macro.dbt_clickhouse.clickhouse__incremental_cur_insert": {"unique_id": "macro.dbt_clickhouse.clickhouse__incremental_cur_insert", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "clickhouse__incremental_cur_insert", "macro_sql": "{% macro clickhouse__incremental_cur_insert(old_relation, tmp_relation, target_relation, unique_key=none) %}\n  {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n  insert into {{ target_relation }} ({{ dest_cols_csv }})\n  select {{ dest_cols_csv }}\n  from {{ old_relation }}\n  where ({{ unique_key }}) not in (\n    select ({{ unique_key }})\n    from {{ tmp_relation }}\n  )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2201014}, "macro.dbt_clickhouse.clickhouse__incremental_insert": {"unique_id": "macro.dbt_clickhouse.clickhouse__incremental_insert", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "clickhouse__incremental_insert", "macro_sql": "{% macro clickhouse__incremental_insert(tmp_relation, target_relation, unique_key=none) %}\n  {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n  insert into {{ target_relation }} ({{ dest_cols_csv }})\n  select {{ dest_cols_csv }}\n  from {{ tmp_relation }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.22081}, "macro.dbt_clickhouse.incremental_validate_on_schema_change": {"unique_id": "macro.dbt_clickhouse.incremental_validate_on_schema_change", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2217693}, "macro.dbt_clickhouse.process_schema_changes": {"unique_id": "macro.dbt_clickhouse.process_schema_changes", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change != 'ignore' %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2230594}, "macro.dbt_clickhouse.clickhouse__snapshot_hash_arguments": {"unique_id": "macro.dbt_clickhouse.clickhouse__snapshot_hash_arguments", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "clickhouse__snapshot_hash_arguments", "macro_sql": "{% macro clickhouse__snapshot_hash_arguments(args) -%}\n  halfMD5({%- for arg in args -%}\n    coalesce(cast({{ arg }} as varchar ), '')\n    {% if not loop.last %} || '|' || {% endif %}\n  {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2345002}, "macro.dbt_clickhouse.clickhouse__snapshot_string_as_time": {"unique_id": "macro.dbt_clickhouse.clickhouse__snapshot_string_as_time", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "clickhouse__snapshot_string_as_time", "macro_sql": "{% macro clickhouse__snapshot_string_as_time(timestamp) -%}\n  {%- set result = \"toDateTime('\" ~ timestamp ~ \"')\" -%}\n  {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2353063}, "macro.dbt_clickhouse.materialization_snapshot_clickhouse": {"unique_id": "macro.dbt_clickhouse.materialization_snapshot_clickhouse", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "materialization_snapshot_clickhouse", "macro_sql": "{% materialization snapshot, adapter='clickhouse' %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=none,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n    {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n    {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n    {% call statement('main') %}\n        {{ final_sql }}\n    {% endcall %}\n\n  {% else %}\n\n    {{ adapter.valid_snapshot_target(target_relation) }}\n\n    {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                             to_relation=target_relation) %}\n\n    {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n    {% do create_columns(target_relation, missing_columns) %}\n\n    {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                 | rejectattr('name', 'equalto', 'dbt_change_type')\n                                 | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                 | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                 | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                 | list %}\n\n    {%- set quoted_source_columns = get_columns_in_query('select * from ' ~ target_relation) -%}\n\n    {% set upsert_relation = target_relation ~ '__snapshot_upsert' %}\n\n    {% do clickhouse__snapshot_merge_sql_one(\n          target = target_relation,\n          source = staging_table,\n          insert_cols = quoted_source_columns,\n          upsert = upsert_relation) \n    %}\n\n    {% call statement('main') %}\n        select 1\n    {% endcall %}\n\n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n    {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.statement", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.get_columns_in_query", "macro.dbt_clickhouse.clickhouse__snapshot_merge_sql_one", "macro.dbt.persist_docs", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2429228}, "macro.dbt_clickhouse.snapshot_staging_table": {"unique_id": "macro.dbt_clickhouse.snapshot_staging_table", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n    select\n      'insert' as dbt_change_type,\n      source_data.*\n    from (\n      select\n        *,\n        {{ strategy.unique_key }} as dbt_unique_key,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n        {{ strategy.scd_id }} as dbt_scd_id\n      from (\n        {{ source_sql }}\n      ) as snapshot_query\n    ) as source_data\n    left outer join (\n      select *,\n        {{ strategy.unique_key }} as dbt_unique_key\n      from {{ target_relation }}\n    ) as snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n    where snapshotted_data.dbt_unique_key is null\n      or (snapshotted_data.dbt_unique_key is not null\n      and snapshotted_data.dbt_valid_to is null\n      and (\n        {{ strategy.row_changed }}\n      )\n    )\n\n    union all\n\n    select\n      'update' as dbt_change_type,\n      source_data.*,\n      snapshotted_data.dbt_scd_id\n    from (\n      select\n        *,\n        {{ strategy.unique_key }} as dbt_unique_key,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        {{ strategy.updated_at }} as dbt_valid_to\n      from (\n        {{ source_sql }}\n      ) as snapshot_query\n    ) as source_data\n    join (\n      select *,\n        {{ strategy.unique_key }} as dbt_unique_key\n      from {{ target_relation }}\n    ) as snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n    where snapshotted_data.dbt_valid_to is null\n    and (\n      {{ strategy.row_changed }}\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2447438}, "macro.dbt_clickhouse.clickhouse__snapshot_merge_sql_one": {"unique_id": "macro.dbt_clickhouse.clickhouse__snapshot_merge_sql_one", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "name": "clickhouse__snapshot_merge_sql_one", "macro_sql": "{% macro clickhouse__snapshot_merge_sql_one(target, source, insert_cols, upsert) -%}\n  {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n  {% call statement('create_upsert_relation') %}\n    create table if not exists {{ upsert }} as {{ target }}\n  {% endcall %}\n\n  {% call statement('insert_unchanged_date') %}\n    insert into {{ upsert }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n      {{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ target }}\n    where dbt_scd_id not in (\n      select {{ source }}.dbt_scd_id from {{ source }} \n    )\n  {% endcall %}\n\n  {% call statement('insert_changed_date') %}\n    insert into {{ upsert }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n      {{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }}\n    where {{ source }}.dbt_change_type IN ('insert', 'update', 'delete');\n  {% endcall %}\n\n  {% call statement('drop_target_relation') %}\n    drop table if exists {{ target }}\n  {% endcall %}\n\n  {% call statement('rename_upsert_relation') %}\n    rename table {{ upsert }} to {{ target }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.247385}, "macro.dbt_clickhouse.clickhouse__test_relationships": {"unique_id": "macro.dbt_clickhouse.clickhouse__test_relationships", "package_name": "dbt_clickhouse", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/clickhouse", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "clickhouse__test_relationships", "macro_sql": "{% macro clickhouse__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\nsettings join_use_nulls = 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2485518}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2497082}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2504876}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2513866}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2541926}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2546856}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2550583}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2554243}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2557924}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2570987}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2578895}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2589345}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2597842}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2647462}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2700374}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2707992}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.271256}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.271514}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2719977}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2737105}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2741861}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2747638}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt_clickhouse.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2758496}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.287241}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.288725}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2895055}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2965178}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2969506}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2974336}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2977319}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2979307}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.2995403}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3000247}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.300424}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3027155}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.30725}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3144543}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3157508}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3161724}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3166203}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  \n  {{ sql_header if sql_header is not none }}\n  \n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3175309}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3186228}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.319091}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3218827}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.328657}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3299167}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3304908}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3308885}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3314862}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3330636}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3370974}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.339456}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3399434}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.340824}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3414335}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3426385}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    \n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3442721}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n   \n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n  \n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3452177}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n  \n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }} \n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3462932}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns) %}\n  \n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt_clickhouse.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt_clickhouse.process_schema_changes", "macro.dbt.get_delete_insert_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3557527}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.361747}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n  \n  {% set schema_changed = False %}\n  \n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n  \n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.364682}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n  \n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n  \n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n  \n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %} \n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n  \n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(schema_change_message) %}\n  \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3676414}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3696043}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3743954}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.37613}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3765767}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.377437}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3777025}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3779087}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3781908}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3783896}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3792243}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3797307}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.382192}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3880537}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3903055}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3912985}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3921185}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.394549}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3965487}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3979158}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.398328}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3989654}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.3994122}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.400632}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4016097}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4026601}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4029312}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4034734}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4044292}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4072142}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4077144}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4084797}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4090433}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4097824}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.410308}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4115355}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4120462}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n       \n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n            \n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n  \n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4136171}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4149086}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4152327}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4157794}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4162982}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4169497}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.418567}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.419741}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4202993}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.420668}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.421096}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4221559}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4224532}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4227543}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4234831}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.425627}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.426066}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4264958}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4267492}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4270372}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4275398}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4279559}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4285192}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4288528}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4291112}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4313672}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4319293}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.432232}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4326105}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4329426}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.433219}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.433541}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.434051}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4346273}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4362402}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.437121}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4378724}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4391675}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4400115}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4415739}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.442769}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4435632}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4446175}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.445139}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4462533}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4467232}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4473093}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_clickhouse.clickhouse__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1651140246.4480107}}, "docs": {"snto_clickhouse.pre_filters": {"unique_id": "snto_clickhouse.pre_filters", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "pre_filters.md", "original_file_path": "docs/pre_filters.md", "name": "pre_filters", "block_contents": "# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 pre_filters\n\u041c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0442\u0440\u0451\u043c \u0442\u0438\u043f\u0430\u043c \u0442\u0440\u0430\u0444\u0438\u043a\u0430:\n- \u0411\u043e\u0442\u044b\n- \u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438\n- \u0420\u043e\u0431\u043e\u0442\u044b\n\n**\u0411\u043e\u0442\u044b** - \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0442\u0438\u043f \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0432 OWOX \u043f\u0440\u0438\u0437\u043d\u0430\u043a **device.isBot = true**  \n**\u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438** - \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u043f\u043e\u0434\u0434\u043e\u043c\u0435\u043d\u0430 **dev.sant-on**  \n**\u0420\u043e\u0431\u043e\u0442\u044b** - \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0442\u0438\u043f\u0443 \u0442\u0440\u0430\u0444\u0438\u043a\u0430 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0438\u043c\u0435\u044e\u0449\u0438\u0435 \u0432 OWOX \u043f\u0440\u0438\u0437\u043d\u0430\u043a **deviceCategory = 'robot'**  \n\n\u041c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u044b\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0435\u0441\u0441\u0438\u0439 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446 \u0432 \u0441\u043b\u043e\u0435 **presets**\n\n**\u0414\u0430\u0442\u0430 min:** 2021-08-01  \n**\u0414\u0430\u0442\u0430 max:** 2022-04-09  \n\n**\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:** \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u043e \u0432 14:30\n\n***\n## \u0417\u0430\u0434\u0430\u0447\u0438\n1. [\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 filters \u0432 CH](https://snto.kaiten.ru/4714801)\n\n\n*** \n### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u043e\u0442\u0447\u0435\u0442\u0430\u0445\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\n\n***"}, "snto_clickhouse.presets_owox_hits": {"unique_id": "snto_clickhouse.presets_owox_hits", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets.md", "original_file_path": "docs/presets.md", "name": "presets_owox_hits", "block_contents": "# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\n\u041c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0445\u0438\u0442\u0430\u043c, \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c\u044b\u043c \u0441 \u0441\u0430\u0439\u0442\u0430.\n\u0422\u0438\u043f\u044b \u0445\u0438\u0442\u043e\u0432:\n- pageview. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u044b \u0441\u0442\u0440\u0430\u043d\u0438\u0446\n- events. \u0421\u043e\u0431\u044b\u0442\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0435 \u0432 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0443 \n\n\u041c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u043e\u0432 \u0432 \u0441\u043b\u043e\u0435 bi \u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439 \u0438 ad-hoc \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\n\n**\u0414\u0430\u0442\u0430 min:** 2021-01-01  \n**\u0414\u0430\u0442\u0430 max:** 2022-04-25  \n\n**\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:** \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u043e \u0432 14:30\n\n***\n## \u0417\u0430\u0434\u0430\u0447\u0438\n1. [\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 presets_hits \u0432 CH](https://snto.kaiten.ru/4403667)\n\n\n*** \n### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u043e\u0442\u0447\u0435\u0442\u0430\u0445\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\n\n***"}, "snto_clickhouse.presets_owox_sessions": {"unique_id": "snto_clickhouse.presets_owox_sessions", "package_name": "snto_clickhouse", "root_path": "/home/ant/Workfiles/snto/snto_dbt", "path": "presets.md", "original_file_path": "docs/presets.md", "name": "presets_owox_sessions", "block_contents": "# \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\n\u041c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0435\u0441\u0441\u0438\u044f\u043c \u0441 \u0432\u0435\u0431\u0430 \u0438 \u0438\u0445 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c.\n\n\u041c\u043e\u0434\u0435\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0451\u0442\u043e\u0432 \u0432 \u0441\u043b\u043e\u0435 bi \u0438 \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439 \u0438 ad-hoc \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\n\n**\u0414\u0430\u0442\u0430 min:** 2021-01-01  \n**\u0414\u0430\u0442\u0430 max:** 2022-04-25  \n\n**\u0420\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f:** \u0415\u0436\u0435\u0434\u043d\u0435\u0432\u043d\u043e \u0432 14:30\n\n***\n## \u0417\u0430\u0434\u0430\u0447\u0438\n1. [\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 presets_sessions \u0432 CH](https://snto.kaiten.ru/4403297)\n\n\n*** \n### \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u043e\u0442\u0447\u0435\u0442\u0430\u0445\n\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442\n\n***"}, "dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/home/ant/virtenvs/snto_dbt/lib/python3.8/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.snto_clickhouse.presets_1c_order_details": ["model.snto_clickhouse.stg_1c_order_details"], "model.snto_clickhouse.presets_owox_ecomm_purchase": ["model.snto_clickhouse.pre_filters", "model.snto_clickhouse.stg_owox_ecomm_purchase"], "model.snto_clickhouse.presets_owox_ecomm_adds": ["model.snto_clickhouse.pre_filters", "model.snto_clickhouse.stg_owox_ecomm_adds"], "model.snto_clickhouse.presets_owox_ecomm_clicks": ["model.snto_clickhouse.pre_filters", "model.snto_clickhouse.stg_owox_ecomm_clicks"], "model.snto_clickhouse.presets_owox_sessions": ["model.snto_clickhouse.pre_filters", "model.snto_clickhouse.pre_owox_hits", "model.snto_clickhouse.pre_owox_sessions"], "model.snto_clickhouse.presets_owox_ecomm_impressions": ["model.snto_clickhouse.pre_filters", "model.snto_clickhouse.stg_owox_ecomm_impressions"], "model.snto_clickhouse.presets_owox_promotions": ["model.snto_clickhouse.pre_filters", "model.snto_clickhouse.stg_owox_promotions"], "model.snto_clickhouse.presets_owox_hits": ["model.snto_clickhouse.pre_filters", "model.snto_clickhouse.pre_owox_hits", "model.snto_clickhouse.pre_owox_hits"], "model.snto_clickhouse.stg_bots": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_cost_data": ["source.snto_clickhouse.dwh_site.src_cost_data"], "model.snto_clickhouse.stg_robots": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_owox_ecomm_purchase": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_owox_ecomm_adds": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_owox_promotions": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_1c_order_details": ["source.snto_clickhouse.dwh_business.src_order_details"], "model.snto_clickhouse.stg_santon": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_owox_ecomm_impressions": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_owox_sessions": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_owox_hits": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.stg_owox_ecomm_clicks": ["source.snto_clickhouse.dwh_site.src_owox_sessions"], "model.snto_clickhouse.pre_filters": ["model.snto_clickhouse.stg_bots", "model.snto_clickhouse.stg_robots", "model.snto_clickhouse.stg_santon"], "model.snto_clickhouse.pre_owox_hits": ["model.snto_clickhouse.stg_owox_hits"], "model.snto_clickhouse.pre_owox_sessions": ["model.snto_clickhouse.stg_owox_sessions"], "test.snto_clickhouse.not_null_presets_owox_hits_clientId.6ae9628a7f": ["model.snto_clickhouse.presets_owox_hits"], "test.snto_clickhouse.not_null_presets_owox_hits_sessionId.8ceaa0b0ad": ["model.snto_clickhouse.presets_owox_hits"], "test.snto_clickhouse.relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_.463a8e6f6d": ["model.snto_clickhouse.presets_owox_hits", "model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.not_null_presets_owox_hits_hitId.3a0b334600": ["model.snto_clickhouse.presets_owox_hits"], "test.snto_clickhouse.unique_presets_owox_hits_hitId.c7b93ea6ec": ["model.snto_clickhouse.presets_owox_hits"], "test.snto_clickhouse.not_null_presets_owox_sessions_clientId.9606f4a02a": ["model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.not_null_presets_owox_sessions_sessionId.809a58b5d1": ["model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.unique_presets_owox_sessions_sessionId.e8798c65e0": ["model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_.bc3ab5248a": ["model.snto_clickhouse.presets_owox_hits", "model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.not_null_presets_owox_sessions_visitNumber.a184635a02": ["model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.not_null_presets_owox_sessions_landingPage.1911b46c12": ["model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.not_null_presets_owox_promotions_clientId.e16ea71340": ["model.snto_clickhouse.presets_owox_promotions"], "test.snto_clickhouse.not_null_presets_owox_promotions_sessionId.73cef2bfe0": ["model.snto_clickhouse.presets_owox_promotions"], "test.snto_clickhouse.not_null_presets_owox_promotions_hitId.6f8692c99d": ["model.snto_clickhouse.presets_owox_promotions"], "test.snto_clickhouse.not_null_presets_owox_promotions_promotionActionInfo.92956378d8": ["model.snto_clickhouse.presets_owox_promotions"], "test.snto_clickhouse.not_null_stg_owox_hits_clientId.baadb94f3a": ["model.snto_clickhouse.stg_owox_hits"], "test.snto_clickhouse.not_null_stg_owox_hits_sessionId.d7a71afd3e": ["model.snto_clickhouse.stg_owox_hits"], "test.snto_clickhouse.not_null_stg_owox_hits_hitId.abf9681516": ["model.snto_clickhouse.stg_owox_hits"], "test.snto_clickhouse.unique_stg_owox_hits_hitId.21ecf387b6": ["model.snto_clickhouse.stg_owox_hits"], "test.snto_clickhouse.not_null_stg_owox_hits_hitTimestamp.4b8d5b1670": ["model.snto_clickhouse.stg_owox_hits"], "test.snto_clickhouse.not_null_stg_owox_hits_pagePath.d0fc46a450": ["model.snto_clickhouse.stg_owox_hits"], "test.snto_clickhouse.not_null_stg_owox_hits_pageUrl.19cc70d244": ["model.snto_clickhouse.stg_owox_hits"], "test.snto_clickhouse.not_null_stg_owox_sessions_clientId.78af63a402": ["model.snto_clickhouse.stg_owox_sessions"], "test.snto_clickhouse.not_null_stg_owox_sessions_sessionId.be8905249a": ["model.snto_clickhouse.stg_owox_sessions"], "test.snto_clickhouse.unique_stg_owox_sessions_sessionId.f173ce0df3": ["model.snto_clickhouse.stg_owox_sessions"], "test.snto_clickhouse.not_null_stg_owox_sessions_visitNumber.dd69192b9c": ["model.snto_clickhouse.stg_owox_sessions"], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_clientId.a51fb3ff75": ["model.snto_clickhouse.stg_owox_ecomm_impressions"], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_sessionId.56fec09aab": ["model.snto_clickhouse.stg_owox_ecomm_impressions"], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_hitId.d0b72d5907": ["model.snto_clickhouse.stg_owox_ecomm_impressions"], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_productSku.fe897d44bc": ["model.snto_clickhouse.stg_owox_ecomm_impressions"], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_clientId.713428598f": ["model.snto_clickhouse.stg_owox_ecomm_clicks"], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_sessionId.3d24e2dd10": ["model.snto_clickhouse.stg_owox_ecomm_clicks"], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_hitId.7078d0a5b2": ["model.snto_clickhouse.stg_owox_ecomm_clicks"], "test.snto_clickhouse.unique_stg_owox_ecomm_clicks_hitId.fbe33b2967": ["model.snto_clickhouse.stg_owox_ecomm_clicks"], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_productSku.65ab65d6d9": ["model.snto_clickhouse.stg_owox_ecomm_clicks"], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_clientId.9ef0c0d140": ["model.snto_clickhouse.stg_owox_ecomm_adds"], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_sessionId.0d32bcf095": ["model.snto_clickhouse.stg_owox_ecomm_adds"], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_hitId.6feac71b12": ["model.snto_clickhouse.stg_owox_ecomm_adds"], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_productSku.0bb5e7e63a": ["model.snto_clickhouse.stg_owox_ecomm_adds"], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_clientId.c93ffa9526": ["model.snto_clickhouse.stg_owox_ecomm_purchase"], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_sessionId.0376744981": ["model.snto_clickhouse.stg_owox_ecomm_purchase"], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_hitId.9406a5a810": ["model.snto_clickhouse.stg_owox_ecomm_purchase"], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_productSku.2513141ee5": ["model.snto_clickhouse.stg_owox_ecomm_purchase"], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_transactionId.eedac369dc": ["model.snto_clickhouse.stg_owox_ecomm_purchase"], "test.snto_clickhouse.not_null_stg_owox_promotions_clientId.34fb284f38": ["model.snto_clickhouse.stg_owox_promotions"], "test.snto_clickhouse.not_null_stg_owox_promotions_sessionId.6edffbc71c": ["model.snto_clickhouse.stg_owox_promotions"], "test.snto_clickhouse.not_null_stg_owox_promotions_hitId.4e45c78373": ["model.snto_clickhouse.stg_owox_promotions"], "test.snto_clickhouse.not_null_stg_owox_promotions_promotionActionInfo.bc99da9007": ["model.snto_clickhouse.stg_owox_promotions"], "test.snto_clickhouse.not_null_stg_bots_sessionId.ad39fa0477": ["model.snto_clickhouse.stg_bots"], "test.snto_clickhouse.unique_stg_bots_sessionId.06a2e761b8": ["model.snto_clickhouse.stg_bots"], "test.snto_clickhouse.not_null_stg_robots_sessionId.12f1029567": ["model.snto_clickhouse.stg_robots"], "test.snto_clickhouse.unique_stg_robots_sessionId.135c96f7e7": ["model.snto_clickhouse.stg_robots"], "test.snto_clickhouse.not_null_stg_santon_sessionId.bb01dce8e5": ["model.snto_clickhouse.stg_santon"], "test.snto_clickhouse.unique_stg_santon_sessionId.769a12dba6": ["model.snto_clickhouse.stg_santon"], "test.snto_clickhouse.not_null_pre_filters_sessionId.3fa2be077d": ["model.snto_clickhouse.pre_filters"], "test.snto_clickhouse.unique_pre_filters_sessionId.d7ee5d9285": ["model.snto_clickhouse.pre_filters"], "test.snto_clickhouse.not_null_pre_owox_hits_clientId.c34fa82e21": ["model.snto_clickhouse.pre_owox_hits"], "test.snto_clickhouse.not_null_pre_owox_hits_sessionId.1880cff365": ["model.snto_clickhouse.pre_owox_hits"], "test.snto_clickhouse.not_null_pre_owox_hits_hitId.5a2b48ee20": ["model.snto_clickhouse.pre_owox_hits"], "test.snto_clickhouse.unique_pre_owox_hits_hitId.3d63a77736": ["model.snto_clickhouse.pre_owox_hits"], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_source.49f25ef944": ["source.snto_clickhouse.dwh_site.src_cost_data"], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_medium.5a7578660b": ["source.snto_clickhouse.dwh_site.src_cost_data"], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_campaign.e032cba5b7": ["source.snto_clickhouse.dwh_site.src_cost_data"], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_keyword.66e835a218": ["source.snto_clickhouse.dwh_site.src_cost_data"], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_adContent.2268d27ebc": ["source.snto_clickhouse.dwh_site.src_cost_data"], "source.snto_clickhouse.dwh_site.src_cost_data": [], "source.snto_clickhouse.dwh_site.src_owox_sessions": [], "source.snto_clickhouse.dwh_business.src_order_details": []}, "child_map": {"model.snto_clickhouse.presets_1c_order_details": [], "model.snto_clickhouse.presets_owox_ecomm_purchase": [], "model.snto_clickhouse.presets_owox_ecomm_adds": [], "model.snto_clickhouse.presets_owox_ecomm_clicks": [], "model.snto_clickhouse.presets_owox_sessions": ["test.snto_clickhouse.not_null_presets_owox_sessions_clientId.9606f4a02a", "test.snto_clickhouse.not_null_presets_owox_sessions_landingPage.1911b46c12", "test.snto_clickhouse.not_null_presets_owox_sessions_sessionId.809a58b5d1", "test.snto_clickhouse.not_null_presets_owox_sessions_visitNumber.a184635a02", "test.snto_clickhouse.relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_.463a8e6f6d", "test.snto_clickhouse.relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_.bc3ab5248a", "test.snto_clickhouse.unique_presets_owox_sessions_sessionId.e8798c65e0"], "model.snto_clickhouse.presets_owox_ecomm_impressions": [], "model.snto_clickhouse.presets_owox_promotions": ["test.snto_clickhouse.not_null_presets_owox_promotions_clientId.e16ea71340", "test.snto_clickhouse.not_null_presets_owox_promotions_hitId.6f8692c99d", "test.snto_clickhouse.not_null_presets_owox_promotions_promotionActionInfo.92956378d8", "test.snto_clickhouse.not_null_presets_owox_promotions_sessionId.73cef2bfe0"], "model.snto_clickhouse.presets_owox_hits": ["test.snto_clickhouse.not_null_presets_owox_hits_clientId.6ae9628a7f", "test.snto_clickhouse.not_null_presets_owox_hits_hitId.3a0b334600", "test.snto_clickhouse.not_null_presets_owox_hits_sessionId.8ceaa0b0ad", "test.snto_clickhouse.relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_.463a8e6f6d", "test.snto_clickhouse.relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_.bc3ab5248a", "test.snto_clickhouse.unique_presets_owox_hits_hitId.c7b93ea6ec"], "model.snto_clickhouse.stg_bots": ["model.snto_clickhouse.pre_filters", "test.snto_clickhouse.not_null_stg_bots_sessionId.ad39fa0477", "test.snto_clickhouse.unique_stg_bots_sessionId.06a2e761b8"], "model.snto_clickhouse.stg_cost_data": [], "model.snto_clickhouse.stg_robots": ["model.snto_clickhouse.pre_filters", "test.snto_clickhouse.not_null_stg_robots_sessionId.12f1029567", "test.snto_clickhouse.unique_stg_robots_sessionId.135c96f7e7"], "model.snto_clickhouse.stg_owox_ecomm_purchase": ["model.snto_clickhouse.presets_owox_ecomm_purchase", "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_clientId.c93ffa9526", "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_hitId.9406a5a810", "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_productSku.2513141ee5", "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_sessionId.0376744981", "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_transactionId.eedac369dc"], "model.snto_clickhouse.stg_owox_ecomm_adds": ["model.snto_clickhouse.presets_owox_ecomm_adds", "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_clientId.9ef0c0d140", "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_hitId.6feac71b12", "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_productSku.0bb5e7e63a", "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_sessionId.0d32bcf095"], "model.snto_clickhouse.stg_owox_promotions": ["model.snto_clickhouse.presets_owox_promotions", "test.snto_clickhouse.not_null_stg_owox_promotions_clientId.34fb284f38", "test.snto_clickhouse.not_null_stg_owox_promotions_hitId.4e45c78373", "test.snto_clickhouse.not_null_stg_owox_promotions_promotionActionInfo.bc99da9007", "test.snto_clickhouse.not_null_stg_owox_promotions_sessionId.6edffbc71c"], "model.snto_clickhouse.stg_1c_order_details": ["model.snto_clickhouse.presets_1c_order_details"], "model.snto_clickhouse.stg_santon": ["model.snto_clickhouse.pre_filters", "test.snto_clickhouse.not_null_stg_santon_sessionId.bb01dce8e5", "test.snto_clickhouse.unique_stg_santon_sessionId.769a12dba6"], "model.snto_clickhouse.stg_owox_ecomm_impressions": ["model.snto_clickhouse.presets_owox_ecomm_impressions", "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_clientId.a51fb3ff75", "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_hitId.d0b72d5907", "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_productSku.fe897d44bc", "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_sessionId.56fec09aab"], "model.snto_clickhouse.stg_owox_sessions": ["model.snto_clickhouse.pre_owox_sessions", "test.snto_clickhouse.not_null_stg_owox_sessions_clientId.78af63a402", "test.snto_clickhouse.not_null_stg_owox_sessions_sessionId.be8905249a", "test.snto_clickhouse.not_null_stg_owox_sessions_visitNumber.dd69192b9c", "test.snto_clickhouse.unique_stg_owox_sessions_sessionId.f173ce0df3"], "model.snto_clickhouse.stg_owox_hits": ["model.snto_clickhouse.pre_owox_hits", "test.snto_clickhouse.not_null_stg_owox_hits_clientId.baadb94f3a", "test.snto_clickhouse.not_null_stg_owox_hits_hitId.abf9681516", "test.snto_clickhouse.not_null_stg_owox_hits_hitTimestamp.4b8d5b1670", "test.snto_clickhouse.not_null_stg_owox_hits_pagePath.d0fc46a450", "test.snto_clickhouse.not_null_stg_owox_hits_pageUrl.19cc70d244", "test.snto_clickhouse.not_null_stg_owox_hits_sessionId.d7a71afd3e", "test.snto_clickhouse.unique_stg_owox_hits_hitId.21ecf387b6"], "model.snto_clickhouse.stg_owox_ecomm_clicks": ["model.snto_clickhouse.presets_owox_ecomm_clicks", "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_clientId.713428598f", "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_hitId.7078d0a5b2", "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_productSku.65ab65d6d9", "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_sessionId.3d24e2dd10", "test.snto_clickhouse.unique_stg_owox_ecomm_clicks_hitId.fbe33b2967"], "model.snto_clickhouse.pre_filters": ["model.snto_clickhouse.presets_owox_ecomm_adds", "model.snto_clickhouse.presets_owox_ecomm_clicks", "model.snto_clickhouse.presets_owox_ecomm_impressions", "model.snto_clickhouse.presets_owox_ecomm_purchase", "model.snto_clickhouse.presets_owox_hits", "model.snto_clickhouse.presets_owox_promotions", "model.snto_clickhouse.presets_owox_sessions", "test.snto_clickhouse.not_null_pre_filters_sessionId.3fa2be077d", "test.snto_clickhouse.unique_pre_filters_sessionId.d7ee5d9285"], "model.snto_clickhouse.pre_owox_hits": ["model.snto_clickhouse.presets_owox_hits", "model.snto_clickhouse.presets_owox_hits", "model.snto_clickhouse.presets_owox_sessions", "test.snto_clickhouse.not_null_pre_owox_hits_clientId.c34fa82e21", "test.snto_clickhouse.not_null_pre_owox_hits_hitId.5a2b48ee20", "test.snto_clickhouse.not_null_pre_owox_hits_sessionId.1880cff365", "test.snto_clickhouse.unique_pre_owox_hits_hitId.3d63a77736"], "model.snto_clickhouse.pre_owox_sessions": ["model.snto_clickhouse.presets_owox_sessions"], "test.snto_clickhouse.not_null_presets_owox_hits_clientId.6ae9628a7f": [], "test.snto_clickhouse.not_null_presets_owox_hits_sessionId.8ceaa0b0ad": [], "test.snto_clickhouse.relationships_presets_owox_hits_sessionId__sessionId__ref_presets_owox_sessions_.463a8e6f6d": [], "test.snto_clickhouse.not_null_presets_owox_hits_hitId.3a0b334600": [], "test.snto_clickhouse.unique_presets_owox_hits_hitId.c7b93ea6ec": [], "test.snto_clickhouse.not_null_presets_owox_sessions_clientId.9606f4a02a": [], "test.snto_clickhouse.not_null_presets_owox_sessions_sessionId.809a58b5d1": [], "test.snto_clickhouse.unique_presets_owox_sessions_sessionId.e8798c65e0": [], "test.snto_clickhouse.relationships_presets_owox_sessions_sessionId__sessionId__ref_presets_owox_hits_.bc3ab5248a": [], "test.snto_clickhouse.not_null_presets_owox_sessions_visitNumber.a184635a02": [], "test.snto_clickhouse.not_null_presets_owox_sessions_landingPage.1911b46c12": [], "test.snto_clickhouse.not_null_presets_owox_promotions_clientId.e16ea71340": [], "test.snto_clickhouse.not_null_presets_owox_promotions_sessionId.73cef2bfe0": [], "test.snto_clickhouse.not_null_presets_owox_promotions_hitId.6f8692c99d": [], "test.snto_clickhouse.not_null_presets_owox_promotions_promotionActionInfo.92956378d8": [], "test.snto_clickhouse.not_null_stg_owox_hits_clientId.baadb94f3a": [], "test.snto_clickhouse.not_null_stg_owox_hits_sessionId.d7a71afd3e": [], "test.snto_clickhouse.not_null_stg_owox_hits_hitId.abf9681516": [], "test.snto_clickhouse.unique_stg_owox_hits_hitId.21ecf387b6": [], "test.snto_clickhouse.not_null_stg_owox_hits_hitTimestamp.4b8d5b1670": [], "test.snto_clickhouse.not_null_stg_owox_hits_pagePath.d0fc46a450": [], "test.snto_clickhouse.not_null_stg_owox_hits_pageUrl.19cc70d244": [], "test.snto_clickhouse.not_null_stg_owox_sessions_clientId.78af63a402": [], "test.snto_clickhouse.not_null_stg_owox_sessions_sessionId.be8905249a": [], "test.snto_clickhouse.unique_stg_owox_sessions_sessionId.f173ce0df3": [], "test.snto_clickhouse.not_null_stg_owox_sessions_visitNumber.dd69192b9c": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_clientId.a51fb3ff75": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_sessionId.56fec09aab": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_hitId.d0b72d5907": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_impressions_productSku.fe897d44bc": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_clientId.713428598f": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_sessionId.3d24e2dd10": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_hitId.7078d0a5b2": [], "test.snto_clickhouse.unique_stg_owox_ecomm_clicks_hitId.fbe33b2967": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_clicks_productSku.65ab65d6d9": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_clientId.9ef0c0d140": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_sessionId.0d32bcf095": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_hitId.6feac71b12": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_adds_productSku.0bb5e7e63a": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_clientId.c93ffa9526": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_sessionId.0376744981": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_hitId.9406a5a810": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_productSku.2513141ee5": [], "test.snto_clickhouse.not_null_stg_owox_ecomm_purchase_transactionId.eedac369dc": [], "test.snto_clickhouse.not_null_stg_owox_promotions_clientId.34fb284f38": [], "test.snto_clickhouse.not_null_stg_owox_promotions_sessionId.6edffbc71c": [], "test.snto_clickhouse.not_null_stg_owox_promotions_hitId.4e45c78373": [], "test.snto_clickhouse.not_null_stg_owox_promotions_promotionActionInfo.bc99da9007": [], "test.snto_clickhouse.not_null_stg_bots_sessionId.ad39fa0477": [], "test.snto_clickhouse.unique_stg_bots_sessionId.06a2e761b8": [], "test.snto_clickhouse.not_null_stg_robots_sessionId.12f1029567": [], "test.snto_clickhouse.unique_stg_robots_sessionId.135c96f7e7": [], "test.snto_clickhouse.not_null_stg_santon_sessionId.bb01dce8e5": [], "test.snto_clickhouse.unique_stg_santon_sessionId.769a12dba6": [], "test.snto_clickhouse.not_null_pre_filters_sessionId.3fa2be077d": [], "test.snto_clickhouse.unique_pre_filters_sessionId.d7ee5d9285": [], "test.snto_clickhouse.not_null_pre_owox_hits_clientId.c34fa82e21": [], "test.snto_clickhouse.not_null_pre_owox_hits_sessionId.1880cff365": [], "test.snto_clickhouse.not_null_pre_owox_hits_hitId.5a2b48ee20": [], "test.snto_clickhouse.unique_pre_owox_hits_hitId.3d63a77736": [], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_source.49f25ef944": [], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_medium.5a7578660b": [], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_campaign.e032cba5b7": [], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_keyword.66e835a218": [], "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_adContent.2268d27ebc": [], "source.snto_clickhouse.dwh_site.src_cost_data": ["model.snto_clickhouse.stg_cost_data", "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_adContent.2268d27ebc", "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_campaign.e032cba5b7", "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_keyword.66e835a218", "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_medium.5a7578660b", "test.snto_clickhouse.source_not_null_dwh_site_src_cost_data_source.49f25ef944"], "source.snto_clickhouse.dwh_site.src_owox_sessions": ["model.snto_clickhouse.stg_bots", "model.snto_clickhouse.stg_owox_ecomm_adds", "model.snto_clickhouse.stg_owox_ecomm_clicks", "model.snto_clickhouse.stg_owox_ecomm_impressions", "model.snto_clickhouse.stg_owox_ecomm_purchase", "model.snto_clickhouse.stg_owox_hits", "model.snto_clickhouse.stg_owox_promotions", "model.snto_clickhouse.stg_owox_sessions", "model.snto_clickhouse.stg_robots", "model.snto_clickhouse.stg_santon"], "source.snto_clickhouse.dwh_business.src_order_details": ["model.snto_clickhouse.stg_1c_order_details"]}}